
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ADMIRATION AND ARROWFUNCTION AS BOOLEAN BREAK CASE CATCH CHAINCHAR CLASS COMMA COMMENTBLOCK COMMENTLINE CONST DEF DEFAULT DIVIDE DOLLAR DOT DOTCOMMA DOUBLE DYNAMIC ELIF ELSE ENUM EQUALS EXTENDS FALSE FINAL FINALLY FLOAT FOR IF IN INT INTEGERDIVISION INTERFACE IS LANGLE LBRACE LBRACKET LIST LPAREN MAIN MAP METHOD MINUS MOD MODULE NEQ NEW NULL NUMBER OR PLUS PRINT PRIVATE PROTECTED PUBLIC RANGLE RBRACE RBRACKET RETURN RPAREN SET STATIC STRING SUPER SWITCH THIS TIMES TRUE TRY TWODOTS TYPEDEF VAR VARIABLE VOID WHILEprograma : cuerpo\n                | programa cuerpocuerpo : impresion\n              | declaracion\n              | operacion\n              | comentario\n              | estructuras_de_Control\n              | retorno\n            estructuras_de_Control : sentencia_If\n                            | sentencia_Switch\n                            | ciclo_for\n                            | funcion_Anonima\n                            | diccionario\n                            | Conjunto\n                            | funcion_flecha\n                            | funcion_Void\n                            | funcion\n                            | funcion_Data\n                            | estructura_List\n    comentario : COMMENTLINE\n                  | COMMENTBLOCKimpresion : PRINT LPAREN valores RPAREN DOTCOMMA\n                 | PRINT LPAREN operacion RPAREN DOTCOMMA\n                 | PRINT LPAREN RPAREN DOTCOMMA\n    sentencia_If : IF LPAREN condicion RPAREN LBRACE programa RBRACE else\n                    | IF LPAREN condicion RPAREN LBRACE programa RBRACE\n    else : ELSE LBRACE programa RBRACE\n    \n    condicion : valor Comparador valor\n            |   condicion conector condicion\n    conector : AND\n                | OR\n    retorno : RETURN\n                | RETURN valores\n    estructura_List : LIST LANGLE tipo RANGLE VARIABLE EQUALS LBRACKET valores RBRACKET DOTCOMMAfuncion_Void : VOID VARIABLE LPAREN valores RPAREN LBRACE programa RBRACE\n                    | VOID VARIABLE LPAREN RPAREN LBRACE programa RBRACE\n                    | VOID MAIN LPAREN RPAREN LBRACE programa RBRACEComparador : EQUALS EQUALS\n                    | LANGLE\n                    | RANGLE\n                    | LANGLE EQUALS\n                    | RANGLE EQUALS\n                    | NEQtupla : LPAREN valores RPAREN\n    declaracion : FINAL tipo VARIABLE EQUALS valor DOTCOMMA\n                | FINAL VAR VARIABLE EQUALS valor DOTCOMMA\n                | CONST tipo VARIABLE EQUALS valor DOTCOMMA\n                | CONST VAR VARIABLE EQUALS valor DOTCOMMA\n                | tipo VARIABLE EQUALS valor DOTCOMMA\n                | VAR VARIABLE EQUALS valor DOTCOMMA\n    valores : valor\n               | valor COMMA valores\n               | tipo VARIABLE\n               | tipo VARIABLE COMMA valoresBool : TRUE\n        | FALSE \n    valor   : VARIABLE\n            | NUMBER\n            | FLOAT\n            | CHAINCHAR\n            | Bool\n            | operacion\n            | tupla\n    tipo : MAP\n            | DOUBLE\n            | STRING\n            | INT\n            | SET\n            | LIST\n            | BOOLEAN\n            | FINAL\n            | CONST\n            | DYNAMIC\n    operacion : valor operador expresionexpresion : LPAREN valor operador expresion RPAREN\n                    | valor funcion : VARIABLE LPAREN valores RPARENfuncion_Data : VARIABLE DOT VARIABLE LPAREN valores RPAREN DOTCOMMAsentencia_Switch : SWITCH LPAREN valor RPAREN LBRACE caso RBRACEcaso : CASE valor TWODOTS programa BREAK DOTCOMMA caso \n            | CASE valor TWODOTS programa BREAK DOTCOMMA funcion_flecha : tipo VARIABLE LPAREN valores RPAREN ARROWFUNCTION programa DOTCOMMAConjunto : SET VARIABLE EQUALS cuerpo_conjunto DOTCOMMA\n                    | SET LANGLE tipo RANGLE VARIABLE EQUALS cuerpo_conjunto DOTCOMMAcuerpo_conjunto : LBRACE valores RBRACE\n                | LBRACE RBRACE operador : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE \n    ciclo_for : FOR LPAREN declaracion condicion DOTCOMMA contador RPAREN LBRACE programa  RBRACE\n    contador : VARIABLE PLUS PLUS\n                | VARIABLE PLUS EQUALS valor\n                | VARIABLE MINUS MINUS\n                | VARIABLE MINUS EQUALS valor\n    funcion_Anonima : VAR VARIABLE EQUALS tupla LBRACE programa RBRACE DOTCOMMA\n                    | tupla LBRACE programa RBRACE DOTCOMMA\n    diccionario : MAP LANGLE tipo COMMA tipo RANGLE VARIABLE EQUALS cuerpo_Diccionario DOTCOMMA\n    cuerpo_Diccionario : LBRACE duplas RBRACE\n                    | LBRACE RBRACE\n    duplas : dupla\n              | dupla COMMA duplas\n    dupla : valor TWODOTS valor\n    '
    
_lr_action_items = {'PRINT':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[9,9,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,9,-44,-53,-76,-74,9,-24,-52,-77,-22,-23,-54,-49,-50,9,-83,-97,9,9,9,-45,-46,9,9,-47,-48,9,9,9,9,9,-78,-75,-26,-79,9,-36,-37,-82,-96,-84,-25,9,9,-35,9,9,9,-98,-34,9,-91,-27,]),'FINAL':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[11,11,-1,-3,-4,-5,-6,-7,-8,61,61,61,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,61,-58,-59,-60,-61,-55,-56,-2,61,-51,-57,-62,-63,61,-33,61,61,61,11,11,-44,61,-53,61,-76,-74,61,11,61,-24,-52,61,-77,61,61,61,-22,-23,-54,-49,-50,11,-83,-97,11,11,11,-45,-46,11,11,-47,-48,11,11,11,11,11,-78,-75,61,-26,-79,11,-36,-37,-82,-96,-84,-25,11,11,-35,11,11,11,-98,-34,11,-91,-27,]),'CONST':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[16,16,-1,-3,-4,-5,-6,-7,-8,62,62,62,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,62,-58,-59,-60,-61,-55,-56,-2,62,-51,-57,-62,-63,62,-33,62,62,62,16,16,-44,62,-53,62,-76,-74,62,16,62,-24,-52,62,-77,62,62,62,-22,-23,-54,-49,-50,16,-83,-97,16,16,16,-45,-46,16,16,-47,-48,16,16,16,16,16,-78,-75,62,-26,-79,16,-36,-37,-82,-96,-84,-25,16,16,-35,16,16,16,-98,-34,16,-91,-27,]),'VAR':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,84,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[15,15,-1,-3,-4,-5,-6,-7,-8,64,75,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,15,115,-44,-53,-76,-74,15,-24,-52,-77,-22,-23,-54,-49,-50,15,-83,-97,15,15,15,-45,-46,15,15,-47,-48,15,15,15,15,15,-78,-75,-26,-79,15,-36,-37,-82,-96,-84,-25,15,15,-35,15,15,15,-98,-34,15,-91,-27,]),'COMMENTLINE':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[17,17,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,17,-44,-53,-76,-74,17,-24,-52,-77,-22,-23,-54,-49,-50,17,-83,-97,17,17,17,-45,-46,17,17,-47,-48,17,17,17,17,17,-78,-75,-26,-79,17,-36,-37,-82,-96,-84,-25,17,17,-35,17,17,17,-98,-34,17,-91,-27,]),'COMMENTBLOCK':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[18,18,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,18,-44,-53,-76,-74,18,-24,-52,-77,-22,-23,-54,-49,-50,18,-83,-97,18,18,18,-45,-46,18,18,-47,-48,18,18,18,18,18,-78,-75,-26,-79,18,-36,-37,-82,-96,-84,-25,18,18,-35,18,18,18,-98,-34,18,-91,-27,]),'RETURN':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[30,30,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,30,-44,-53,-76,-74,30,-24,-52,-77,-22,-23,-54,-49,-50,30,-83,-97,30,30,30,-45,-46,30,30,-47,-48,30,30,30,30,30,-78,-75,-26,-79,30,-36,-37,-82,-96,-84,-25,30,30,-35,30,30,30,-98,-34,30,-91,-27,]),'MAP':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[31,31,-1,-3,-4,-5,-6,-7,-8,58,58,58,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,58,-58,-59,-60,-61,-55,-56,-2,58,-51,-57,-62,-63,58,-33,58,58,58,31,58,-44,58,-53,58,-76,-74,58,31,58,-24,-52,58,-77,58,58,58,-22,-23,-54,-49,-50,31,-83,-97,31,31,31,-45,-46,31,31,-47,-48,31,31,31,31,31,-78,-75,58,-26,-79,31,-36,-37,-82,-96,-84,-25,31,31,-35,31,31,31,-98,-34,31,-91,-27,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[32,32,-1,-3,-4,-5,-6,-7,-8,32,32,32,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,32,-58,-59,-60,-61,-55,-56,-2,32,-51,-57,-62,-63,32,-33,32,32,32,32,32,-44,32,-53,32,-76,-74,32,32,32,-24,-52,32,-77,32,32,32,-22,-23,-54,-49,-50,32,-83,-97,32,32,32,-45,-46,32,32,-47,-48,32,32,32,32,32,-78,-75,32,-26,-79,32,-36,-37,-82,-96,-84,-25,32,32,-35,32,32,32,-98,-34,32,-91,-27,]),'STRING':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[33,33,-1,-3,-4,-5,-6,-7,-8,33,33,33,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,33,-58,-59,-60,-61,-55,-56,-2,33,-51,-57,-62,-63,33,-33,33,33,33,33,33,-44,33,-53,33,-76,-74,33,33,33,-24,-52,33,-77,33,33,33,-22,-23,-54,-49,-50,33,-83,-97,33,33,33,-45,-46,33,33,-47,-48,33,33,33,33,33,-78,-75,33,-26,-79,33,-36,-37,-82,-96,-84,-25,33,33,-35,33,33,33,-98,-34,33,-91,-27,]),'INT':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[34,34,-1,-3,-4,-5,-6,-7,-8,34,34,34,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,34,-58,-59,-60,-61,-55,-56,-2,34,-51,-57,-62,-63,34,-33,34,34,34,34,34,-44,34,-53,34,-76,-74,34,34,34,-24,-52,34,-77,34,34,34,-22,-23,-54,-49,-50,34,-83,-97,34,34,34,-45,-46,34,34,-47,-48,34,34,34,34,34,-78,-75,34,-26,-79,34,-36,-37,-82,-96,-84,-25,34,34,-35,34,34,34,-98,-34,34,-91,-27,]),'SET':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[35,35,-1,-3,-4,-5,-6,-7,-8,59,59,59,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,59,-58,-59,-60,-61,-55,-56,-2,59,-51,-57,-62,-63,59,-33,59,59,59,35,59,-44,59,-53,59,-76,-74,59,35,59,-24,-52,59,-77,59,59,59,-22,-23,-54,-49,-50,35,-83,-97,35,35,35,-45,-46,35,35,-47,-48,35,35,35,35,35,-78,-75,59,-26,-79,35,-36,-37,-82,-96,-84,-25,35,35,-35,35,35,35,-98,-34,35,-91,-27,]),'LIST':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[36,36,-1,-3,-4,-5,-6,-7,-8,60,60,60,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,60,-58,-59,-60,-61,-55,-56,-2,60,-51,-57,-62,-63,60,-33,60,60,60,36,60,-44,60,-53,60,-76,-74,60,36,60,-24,-52,60,-77,60,60,60,-22,-23,-54,-49,-50,36,-83,-97,36,36,36,-45,-46,36,36,-47,-48,36,36,36,36,36,-78,-75,60,-26,-79,36,-36,-37,-82,-96,-84,-25,36,36,-35,36,36,36,-98,-34,36,-91,-27,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[37,37,-1,-3,-4,-5,-6,-7,-8,37,37,37,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,37,-58,-59,-60,-61,-55,-56,-2,37,-51,-57,-62,-63,37,-33,37,37,37,37,37,-44,37,-53,37,-76,-74,37,37,37,-24,-52,37,-77,37,37,37,-22,-23,-54,-49,-50,37,-83,-97,37,37,37,-45,-46,37,37,-47,-48,37,37,37,37,37,-78,-75,37,-26,-79,37,-36,-37,-82,-96,-84,-25,37,37,-35,37,37,37,-98,-34,37,-91,-27,]),'DYNAMIC':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,76,77,79,80,81,84,90,91,92,96,99,100,101,109,116,119,121,122,127,128,134,136,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[38,38,-1,-3,-4,-5,-6,-7,-8,38,38,38,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,38,-58,-59,-60,-61,-55,-56,-2,38,-51,-57,-62,-63,38,-33,38,38,38,38,38,-44,38,-53,38,-76,-74,38,38,38,-24,-52,38,-77,38,38,38,-22,-23,-54,-49,-50,38,-83,-97,38,38,38,-45,-46,38,38,-47,-48,38,38,38,38,38,-78,-75,38,-26,-79,38,-36,-37,-82,-96,-84,-25,38,38,-35,38,38,38,-98,-34,38,-91,-27,]),'VARIABLE':([0,1,2,3,4,5,6,7,8,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,74,75,76,81,82,83,90,91,92,95,96,99,100,101,102,109,113,114,115,116,119,121,122,123,124,127,128,132,133,136,137,138,141,142,143,144,146,147,148,156,157,158,161,164,165,166,170,175,176,179,180,181,183,184,186,187,188,189,190,193,194,195,196,200,202,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,234,236,237,239,241,242,243,246,251,252,254,256,257,258,],[13,13,-1,-3,-4,-5,-6,-7,-8,55,-71,65,73,-72,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,55,-64,-65,-66,-67,78,-69,-70,-73,-58,-59,-60,-61,85,-55,-56,-2,55,-51,92,-57,-62,-63,-64,-68,-69,-71,-72,93,94,55,98,55,-87,-88,-89,-90,103,104,-33,13,55,55,-44,55,-53,55,55,-76,-74,55,55,13,55,151,152,55,-24,-52,55,55,55,-77,55,55,55,55,173,174,55,-30,-31,55,-39,-40,-43,-22,-23,-54,-49,55,-50,13,-83,-97,13,-38,-41,-42,204,55,13,13,-45,-46,13,13,-47,-48,212,13,55,13,13,13,13,-78,-75,55,-26,-79,13,-36,-37,-82,-96,-84,-25,13,13,55,55,-35,55,13,13,13,-98,-34,13,-91,55,55,-27,]),'NUMBER':([0,1,2,3,4,5,6,7,8,10,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,68,69,70,71,72,76,81,82,83,90,91,92,95,96,99,100,101,102,109,113,116,119,121,122,123,124,127,128,132,133,136,141,142,143,144,146,147,148,156,157,158,161,164,165,166,170,175,176,179,180,181,184,186,187,188,189,190,193,194,195,200,202,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,234,236,237,239,241,242,243,246,251,252,254,256,257,258,],[39,39,-1,-3,-4,-5,-6,-7,-8,39,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,39,-58,-59,-60,-61,-55,-56,-2,39,-51,-57,-62,-63,39,39,-87,-88,-89,-90,-33,39,39,39,-44,39,-53,39,39,-76,-74,39,39,39,39,39,-24,-52,39,39,39,-77,39,39,39,39,39,-30,-31,39,-39,-40,-43,-22,-23,-54,-49,39,-50,39,-83,-97,39,-38,-41,-42,39,39,39,-45,-46,39,39,-47,-48,39,39,39,39,39,39,-78,-75,39,-26,-79,39,-36,-37,-82,-96,-84,-25,39,39,39,39,-35,39,39,39,39,-98,-34,39,-91,39,39,-27,]),'FLOAT':([0,1,2,3,4,5,6,7,8,10,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,68,69,70,71,72,76,81,82,83,90,91,92,95,96,99,100,101,102,109,113,116,119,121,122,123,124,127,128,132,133,136,141,142,143,144,146,147,148,156,157,158,161,164,165,166,170,175,176,179,180,181,184,186,187,188,189,190,193,194,195,200,202,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,234,236,237,239,241,242,243,246,251,252,254,256,257,258,],[40,40,-1,-3,-4,-5,-6,-7,-8,40,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,40,-58,-59,-60,-61,-55,-56,-2,40,-51,-57,-62,-63,40,40,-87,-88,-89,-90,-33,40,40,40,-44,40,-53,40,40,-76,-74,40,40,40,40,40,-24,-52,40,40,40,-77,40,40,40,40,40,-30,-31,40,-39,-40,-43,-22,-23,-54,-49,40,-50,40,-83,-97,40,-38,-41,-42,40,40,40,-45,-46,40,40,-47,-48,40,40,40,40,40,40,-78,-75,40,-26,-79,40,-36,-37,-82,-96,-84,-25,40,40,40,40,-35,40,40,40,40,-98,-34,40,-91,40,40,-27,]),'CHAINCHAR':([0,1,2,3,4,5,6,7,8,10,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,68,69,70,71,72,76,81,82,83,90,91,92,95,96,99,100,101,102,109,113,116,119,121,122,123,124,127,128,132,133,136,141,142,143,144,146,147,148,156,157,158,161,164,165,166,170,175,176,179,180,181,184,186,187,188,189,190,193,194,195,200,202,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,234,236,237,239,241,242,243,246,251,252,254,256,257,258,],[41,41,-1,-3,-4,-5,-6,-7,-8,41,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,41,-58,-59,-60,-61,-55,-56,-2,41,-51,-57,-62,-63,41,41,-87,-88,-89,-90,-33,41,41,41,-44,41,-53,41,41,-76,-74,41,41,41,41,41,-24,-52,41,41,41,-77,41,41,41,41,41,-30,-31,41,-39,-40,-43,-22,-23,-54,-49,41,-50,41,-83,-97,41,-38,-41,-42,41,41,41,-45,-46,41,41,-47,-48,41,41,41,41,41,41,-78,-75,41,-26,-79,41,-36,-37,-82,-96,-84,-25,41,41,41,41,-35,41,41,41,41,-98,-34,41,-91,41,41,-27,]),'IF':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[44,44,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,44,-44,-53,-76,-74,44,-24,-52,-77,-22,-23,-54,-49,-50,44,-83,-97,44,44,44,-45,-46,44,44,-47,-48,44,44,44,44,44,-78,-75,-26,-79,44,-36,-37,-82,-96,-84,-25,44,44,-35,44,44,44,-98,-34,44,-91,-27,]),'SWITCH':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[45,45,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,45,-44,-53,-76,-74,45,-24,-52,-77,-22,-23,-54,-49,-50,45,-83,-97,45,45,45,-45,-46,45,45,-47,-48,45,45,45,45,45,-78,-75,-26,-79,45,-36,-37,-82,-96,-84,-25,45,45,-35,45,45,45,-98,-34,45,-91,-27,]),'FOR':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[46,46,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,46,-44,-53,-76,-74,46,-24,-52,-77,-22,-23,-54,-49,-50,46,-83,-97,46,46,46,-45,-46,46,46,-47,-48,46,46,46,46,46,-78,-75,-26,-79,46,-36,-37,-82,-96,-84,-25,46,46,-35,46,46,46,-98,-34,46,-91,-27,]),'VOID':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,81,90,92,99,100,109,119,121,127,156,157,158,161,165,166,170,175,176,186,187,188,189,190,193,194,195,200,205,206,207,208,209,210,215,216,221,222,223,224,225,227,229,231,232,237,241,242,243,246,251,252,254,258,],[47,47,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,47,-44,-53,-76,-74,47,-24,-52,-77,-22,-23,-54,-49,-50,47,-83,-97,47,47,47,-45,-46,47,47,-47,-48,47,47,47,47,47,-78,-75,-26,-79,47,-36,-37,-82,-96,-84,-25,47,47,-35,47,47,47,-98,-34,47,-91,-27,]),'TRUE':([0,1,2,3,4,5,6,7,8,10,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,68,69,70,71,72,76,81,82,83,90,91,92,95,96,99,100,101,102,109,113,116,119,121,122,123,124,127,128,132,133,136,141,142,143,144,146,147,148,156,157,158,161,164,165,166,170,175,176,179,180,181,184,186,187,188,189,190,193,194,195,200,202,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,234,236,237,239,241,242,243,246,251,252,254,256,257,258,],[48,48,-1,-3,-4,-5,-6,-7,-8,48,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,48,-58,-59,-60,-61,-55,-56,-2,48,-51,-57,-62,-63,48,48,-87,-88,-89,-90,-33,48,48,48,-44,48,-53,48,48,-76,-74,48,48,48,48,48,-24,-52,48,48,48,-77,48,48,48,48,48,-30,-31,48,-39,-40,-43,-22,-23,-54,-49,48,-50,48,-83,-97,48,-38,-41,-42,48,48,48,-45,-46,48,48,-47,-48,48,48,48,48,48,48,-78,-75,48,-26,-79,48,-36,-37,-82,-96,-84,-25,48,48,48,48,-35,48,48,48,48,-98,-34,48,-91,48,48,-27,]),'FALSE':([0,1,2,3,4,5,6,7,8,10,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,51,53,55,56,57,66,68,69,70,71,72,76,81,82,83,90,91,92,95,96,99,100,101,102,109,113,116,119,121,122,123,124,127,128,132,133,136,141,142,143,144,146,147,148,156,157,158,161,164,165,166,170,175,176,179,180,181,184,186,187,188,189,190,193,194,195,200,202,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,234,236,237,239,241,242,243,246,251,252,254,256,257,258,],[49,49,-1,-3,-4,-5,-6,-7,-8,49,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,49,-58,-59,-60,-61,-55,-56,-2,49,-51,-57,-62,-63,49,49,-87,-88,-89,-90,-33,49,49,49,-44,49,-53,49,49,-76,-74,49,49,49,49,49,-24,-52,49,49,49,-77,49,49,49,49,49,-30,-31,49,-39,-40,-43,-22,-23,-54,-49,49,-50,49,-83,-97,49,-38,-41,-42,49,49,49,-45,-46,49,49,-47,-48,49,49,49,49,49,49,-78,-75,49,-26,-79,49,-36,-37,-82,-96,-84,-25,49,49,49,49,-35,49,49,49,49,-98,-34,49,-91,49,49,-27,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,44,45,46,48,49,50,51,53,55,56,57,65,66,68,69,70,71,72,76,81,82,83,85,86,90,91,92,95,96,98,99,100,101,102,109,113,116,119,121,122,123,124,127,128,132,133,136,141,142,143,144,146,147,148,156,157,158,161,164,165,166,170,175,176,179,180,181,184,186,187,188,189,190,193,194,195,200,202,205,206,207,208,209,210,214,215,216,221,222,223,224,225,227,229,231,232,234,236,237,239,241,242,243,246,251,252,254,256,257,258,],[10,10,-1,-3,-4,-5,-6,-7,-8,51,10,66,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,10,-58,-59,-60,-61,82,83,84,-55,-56,-2,10,-51,-57,-62,-63,96,10,101,-87,-88,-89,-90,-33,10,10,10,116,117,-44,10,-53,10,10,128,-76,-74,10,10,10,10,10,-24,-52,10,10,10,-77,10,10,10,10,10,-30,-31,10,-39,-40,-43,-22,-23,-54,-49,101,-50,10,-83,-97,10,-38,-41,-42,10,10,10,-45,-46,10,10,-47,-48,10,10,10,10,10,10,-78,-75,10,-26,-79,10,-36,-37,-82,-96,-84,-25,10,10,10,10,-35,10,10,10,10,-98,-34,10,-91,10,10,-27,]),'$end':([1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,90,92,99,100,119,121,127,156,157,158,161,165,170,175,188,189,194,195,209,210,215,216,222,223,224,225,227,229,237,246,251,254,258,],[0,-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,-44,-53,-76,-74,-24,-52,-77,-22,-23,-54,-49,-50,-83,-97,-45,-46,-47,-48,-78,-75,-26,-79,-36,-37,-82,-96,-84,-25,-35,-98,-34,-91,-27,]),'RBRACE':([2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,90,92,99,100,109,119,121,127,136,156,157,158,161,165,170,171,175,188,189,193,194,195,200,201,206,207,209,210,215,216,221,222,223,224,225,227,229,237,239,243,246,247,249,251,252,254,258,259,260,261,262,],[-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,-44,-53,-76,-74,139,-24,-52,-77,172,-22,-23,-54,-49,-50,-83,197,-97,-45,-46,211,-47,-48,215,216,222,223,-78,-75,-26,-79,237,-36,-37,-82,-96,-84,-25,-35,248,254,-98,255,-101,-34,258,-91,-27,-81,-102,-103,-80,]),'DOTCOMMA':([2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,88,90,92,99,100,118,119,120,121,125,127,130,131,135,139,150,156,157,158,159,160,161,165,167,168,170,172,175,177,178,188,189,191,194,195,197,208,209,210,211,213,215,216,222,223,224,225,227,229,237,238,240,246,248,251,253,254,255,258,],[-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,119,-44,-53,-76,-74,156,-24,157,-52,161,-77,165,-63,170,175,183,-22,-23,-54,188,189,-49,-50,194,195,-83,-86,-97,-29,-28,-45,-46,209,-47,-48,-85,224,-78,-75,225,227,-26,-79,-36,-37,-82,-96,-84,-25,-35,246,251,-98,-100,-34,259,-91,-99,-27,]),'BREAK':([2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,39,40,41,42,48,49,50,53,55,56,57,76,90,92,99,100,119,121,127,156,157,158,161,165,170,175,188,189,194,195,209,210,215,216,222,223,224,225,227,229,237,242,246,251,254,258,],[-1,-3,-4,-5,-6,-7,-8,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-58,-59,-60,-61,-55,-56,-2,-51,-57,-62,-63,-33,-44,-53,-76,-74,-24,-52,-77,-22,-23,-54,-49,-50,-83,-97,-45,-46,-47,-48,-78,-75,-26,-79,-36,-37,-82,-96,-84,-25,-35,253,-98,-34,-91,-27,]),'PLUS':([5,13,14,39,40,41,42,43,48,49,53,55,56,57,89,90,99,100,111,112,125,129,130,131,159,160,167,168,178,192,204,210,217,219,244,245,250,261,],[-62,-57,69,-58,-59,-60,-61,-63,-55,-56,69,-57,-62,-63,-62,-44,69,-74,69,69,69,69,69,-63,69,69,69,69,69,-74,219,-75,69,233,69,69,69,69,]),'MINUS':([5,13,14,39,40,41,42,43,48,49,53,55,56,57,89,90,99,100,111,112,125,129,130,131,159,160,167,168,178,192,204,210,217,220,244,245,250,261,],[-62,-57,70,-58,-59,-60,-61,-63,-55,-56,70,-57,-62,-63,-62,-44,70,-74,70,70,70,70,70,-63,70,70,70,70,70,-74,220,-75,70,235,70,70,70,70,]),'TIMES':([5,13,14,39,40,41,42,43,48,49,53,55,56,57,89,90,99,100,111,112,125,129,130,131,159,160,167,168,178,192,210,217,244,245,250,261,],[-62,-57,71,-58,-59,-60,-61,-63,-55,-56,71,-57,-62,-63,-62,-44,71,-74,71,71,71,71,71,-63,71,71,71,71,71,-74,-75,71,71,71,71,71,]),'DIVIDE':([5,13,14,39,40,41,42,43,48,49,53,55,56,57,89,90,99,100,111,112,125,129,130,131,159,160,167,168,178,192,210,217,244,245,250,261,],[-62,-57,72,-58,-59,-60,-61,-63,-55,-56,72,-57,-62,-63,-62,-44,72,-74,72,72,72,72,72,-63,72,72,72,72,72,-74,-75,72,72,72,72,72,]),'DOT':([13,],[67,]),'LANGLE':([31,35,36,39,40,41,42,48,49,55,56,57,90,99,100,111,210,],[77,79,80,-58,-59,-60,-61,-55,-56,-57,-62,-63,-44,-76,-74,146,-75,]),'COMMA':([32,33,34,37,38,39,40,41,42,48,49,53,55,56,57,58,59,60,61,62,89,90,92,99,100,105,129,192,210,249,261,],[-65,-66,-67,-70,-73,-58,-59,-60,-61,-55,-56,91,-57,-62,-63,-64,-68,-69,-71,-72,-62,-44,122,-76,-74,134,91,-74,-75,256,-103,]),'RANGLE':([32,33,34,37,38,39,40,41,42,48,49,55,56,57,58,59,60,61,62,90,99,100,107,108,111,169,210,],[-65,-66,-67,-70,-73,-58,-59,-60,-61,-55,-56,-57,-62,-63,-64,-68,-69,-71,-72,-44,-76,-74,137,138,147,196,-75,]),'RPAREN':([39,40,41,42,48,49,51,52,53,55,56,57,87,89,90,92,97,99,100,110,112,116,117,121,126,129,153,158,163,177,178,192,203,210,233,235,244,245,],[-58,-59,-60,-61,-55,-56,88,90,-51,-57,-62,-63,118,120,-44,-53,127,-76,-74,140,149,154,155,-52,162,-51,185,-54,191,-29,-28,210,218,-75,-92,-94,-93,-95,]),'EQUALS':([39,40,41,42,48,49,55,56,57,65,73,78,90,93,94,99,100,103,104,111,145,146,147,151,152,173,174,210,212,219,220,],[-58,-59,-60,-61,-55,-56,-57,-62,-63,95,102,106,-44,123,124,-76,-74,132,133,145,179,180,181,95,184,198,199,-75,226,234,236,]),'NEQ':([39,40,41,42,48,49,55,56,57,90,99,100,111,210,],[-58,-59,-60,-61,-55,-56,-57,-62,-63,-44,-76,-74,148,-75,]),'RBRACKET':([39,40,41,42,48,49,53,55,56,57,90,92,99,100,121,158,210,228,],[-58,-59,-60,-61,-55,-56,-51,-57,-62,-63,-44,-53,-76,-74,-52,-54,-75,240,]),'AND':([39,40,41,42,48,49,55,56,57,90,99,100,110,150,177,178,210,],[-58,-59,-60,-61,-55,-56,-57,-62,-63,-44,-76,-74,142,142,142,-28,-75,]),'OR':([39,40,41,42,48,49,55,56,57,90,99,100,110,150,177,178,210,],[-58,-59,-60,-61,-55,-56,-57,-62,-63,-44,-76,-74,143,143,143,-28,-75,]),'TWODOTS':([39,40,41,42,48,49,55,56,57,90,99,100,210,217,250,],[-58,-59,-60,-61,-55,-56,-57,-62,-63,-44,-76,-74,-75,231,257,]),'LBRACE':([43,90,106,131,140,149,154,155,185,198,218,226,230,],[81,-44,136,166,176,182,186,187,205,136,232,239,241,]),'MAIN':([47,],[86,]),'ARROWFUNCTION':([162,],[190,]),'CASE':([182,259,],[202,202,]),'LBRACKET':([199,],[214,]),'ELSE':([215,],[230,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,81,166,176,186,187,190,205,231,232,241,],[1,109,193,200,206,207,208,221,242,243,252,]),'cuerpo':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[2,50,2,50,2,2,2,2,2,50,50,2,50,50,50,50,2,2,2,50,50,50,]),'impresion':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'declaracion':([0,1,81,84,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[4,4,4,113,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'operacion':([0,1,10,30,51,66,68,81,82,83,91,95,96,101,102,109,113,116,122,123,124,128,132,133,136,141,144,164,166,176,184,186,187,190,193,200,202,205,206,207,208,214,221,231,232,234,236,239,241,242,243,252,256,257,],[5,5,56,56,89,56,56,5,56,56,56,56,56,56,56,5,56,56,56,56,56,56,56,56,56,56,56,56,5,5,56,5,5,5,5,5,56,5,5,5,5,56,5,5,5,56,56,56,5,5,5,5,56,56,]),'comentario':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'estructuras_de_Control':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'retorno':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'tipo':([0,1,10,11,16,30,51,66,77,79,80,81,84,91,96,101,109,116,122,128,134,136,166,176,186,187,190,193,200,205,206,207,208,214,221,231,232,241,242,243,252,],[12,12,54,63,74,54,54,54,105,107,108,12,114,54,54,54,12,54,54,54,169,54,12,12,12,12,12,12,12,12,12,12,12,54,12,12,12,12,12,12,12,]),'valor':([0,1,10,30,51,66,68,81,82,83,91,95,96,101,102,109,113,116,122,123,124,128,132,133,136,141,144,164,166,176,184,186,187,190,193,200,202,205,206,207,208,214,221,231,232,234,236,239,241,242,243,252,256,257,],[14,14,53,53,53,53,99,14,111,112,53,125,53,129,130,14,111,53,53,159,160,53,167,168,53,111,178,99,14,14,130,14,14,14,14,14,217,14,14,14,14,53,14,14,14,244,245,250,14,14,14,14,250,261,]),'sentencia_If':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'sentencia_Switch':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ciclo_for':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'funcion_Anonima':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'diccionario':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'Conjunto':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'funcion_flecha':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'funcion_Void':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'funcion':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'funcion_Data':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'estructura_List':([0,1,81,109,166,176,186,187,190,193,200,205,206,207,208,221,231,232,241,242,243,252,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'Bool':([0,1,10,30,51,66,68,81,82,83,91,95,96,101,102,109,113,116,122,123,124,128,132,133,136,141,144,164,166,176,184,186,187,190,193,200,202,205,206,207,208,214,221,231,232,234,236,239,241,242,243,252,256,257,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'tupla':([0,1,10,30,51,66,68,81,82,83,91,95,96,101,102,109,113,116,122,123,124,128,132,133,136,141,144,164,166,176,184,186,187,190,193,200,202,205,206,207,208,214,221,231,232,234,236,239,241,242,243,252,256,257,],[43,43,57,57,57,57,57,43,57,57,57,57,57,57,131,43,57,57,57,57,57,57,57,57,57,57,57,57,43,43,57,43,43,43,43,43,57,43,43,43,43,57,43,43,43,57,57,57,43,43,43,43,57,57,]),'valores':([10,30,51,66,91,96,101,116,122,128,136,214,],[52,76,87,97,121,126,52,153,158,163,171,228,]),'operador':([14,53,99,111,112,125,129,130,159,160,167,168,178,217,244,245,250,261,],[68,68,68,68,68,68,164,68,68,68,68,68,68,68,68,68,68,68,]),'expresion':([68,164,],[100,192,]),'condicion':([82,113,141,],[110,150,177,]),'cuerpo_conjunto':([106,198,],[135,213,]),'conector':([110,150,177,],[141,141,141,]),'Comparador':([111,],[144,]),'caso':([182,259,],[201,262,]),'contador':([183,],[203,]),'else':([215,],[229,]),'cuerpo_Diccionario':([226,],[238,]),'duplas':([239,256,],[247,260,]),'dupla':([239,256,],[249,249,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> cuerpo','programa',1,'p_programa','main.py',12),
  ('programa -> programa cuerpo','programa',2,'p_programa','main.py',13),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','main.py',17),
  ('cuerpo -> declaracion','cuerpo',1,'p_cuerpo','main.py',18),
  ('cuerpo -> operacion','cuerpo',1,'p_cuerpo','main.py',19),
  ('cuerpo -> comentario','cuerpo',1,'p_cuerpo','main.py',20),
  ('cuerpo -> estructuras_de_Control','cuerpo',1,'p_cuerpo','main.py',21),
  ('cuerpo -> retorno','cuerpo',1,'p_cuerpo','main.py',22),
  ('estructuras_de_Control -> sentencia_If','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',26),
  ('estructuras_de_Control -> sentencia_Switch','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',27),
  ('estructuras_de_Control -> ciclo_for','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',28),
  ('estructuras_de_Control -> funcion_Anonima','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',29),
  ('estructuras_de_Control -> diccionario','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',30),
  ('estructuras_de_Control -> Conjunto','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',31),
  ('estructuras_de_Control -> funcion_flecha','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',32),
  ('estructuras_de_Control -> funcion_Void','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',33),
  ('estructuras_de_Control -> funcion','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',34),
  ('estructuras_de_Control -> funcion_Data','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',35),
  ('estructuras_de_Control -> estructura_List','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',36),
  ('comentario -> COMMENTLINE','comentario',1,'p_comentario','main.py',40),
  ('comentario -> COMMENTBLOCK','comentario',1,'p_comentario','main.py',41),
  ('impresion -> PRINT LPAREN valores RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',45),
  ('impresion -> PRINT LPAREN operacion RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',46),
  ('impresion -> PRINT LPAREN RPAREN DOTCOMMA','impresion',4,'p_impresion','main.py',47),
  ('sentencia_If -> IF LPAREN condicion RPAREN LBRACE programa RBRACE else','sentencia_If',8,'p_sentencia_If','main.py',52),
  ('sentencia_If -> IF LPAREN condicion RPAREN LBRACE programa RBRACE','sentencia_If',7,'p_sentencia_If','main.py',53),
  ('else -> ELSE LBRACE programa RBRACE','else',4,'p_else','main.py',62),
  ('condicion -> valor Comparador valor','condicion',3,'p_condicion','main.py',66),
  ('condicion -> condicion conector condicion','condicion',3,'p_condicion','main.py',67),
  ('conector -> AND','conector',1,'p_conector','main.py',71),
  ('conector -> OR','conector',1,'p_conector','main.py',72),
  ('retorno -> RETURN','retorno',1,'p_retorno','main.py',76),
  ('retorno -> RETURN valores','retorno',2,'p_retorno','main.py',77),
  ('estructura_List -> LIST LANGLE tipo RANGLE VARIABLE EQUALS LBRACKET valores RBRACKET DOTCOMMA','estructura_List',10,'p_estructura_List','main.py',81),
  ('funcion_Void -> VOID VARIABLE LPAREN valores RPAREN LBRACE programa RBRACE','funcion_Void',8,'p_funcion_Void','main.py',85),
  ('funcion_Void -> VOID VARIABLE LPAREN RPAREN LBRACE programa RBRACE','funcion_Void',7,'p_funcion_Void','main.py',86),
  ('funcion_Void -> VOID MAIN LPAREN RPAREN LBRACE programa RBRACE','funcion_Void',7,'p_funcion_Void','main.py',87),
  ('Comparador -> EQUALS EQUALS','Comparador',2,'p_Comparador','main.py',101),
  ('Comparador -> LANGLE','Comparador',1,'p_Comparador','main.py',102),
  ('Comparador -> RANGLE','Comparador',1,'p_Comparador','main.py',103),
  ('Comparador -> LANGLE EQUALS','Comparador',2,'p_Comparador','main.py',104),
  ('Comparador -> RANGLE EQUALS','Comparador',2,'p_Comparador','main.py',105),
  ('Comparador -> NEQ','Comparador',1,'p_Comparador','main.py',106),
  ('tupla -> LPAREN valores RPAREN','tupla',3,'p_tupla','main.py',109),
  ('declaracion -> FINAL tipo VARIABLE EQUALS valor DOTCOMMA','declaracion',6,'p_declaracion','main.py',115),
  ('declaracion -> FINAL VAR VARIABLE EQUALS valor DOTCOMMA','declaracion',6,'p_declaracion','main.py',116),
  ('declaracion -> CONST tipo VARIABLE EQUALS valor DOTCOMMA','declaracion',6,'p_declaracion','main.py',117),
  ('declaracion -> CONST VAR VARIABLE EQUALS valor DOTCOMMA','declaracion',6,'p_declaracion','main.py',118),
  ('declaracion -> tipo VARIABLE EQUALS valor DOTCOMMA','declaracion',5,'p_declaracion','main.py',119),
  ('declaracion -> VAR VARIABLE EQUALS valor DOTCOMMA','declaracion',5,'p_declaracion','main.py',120),
  ('valores -> valor','valores',1,'p_valores','main.py',170),
  ('valores -> valor COMMA valores','valores',3,'p_valores','main.py',171),
  ('valores -> tipo VARIABLE','valores',2,'p_valores','main.py',172),
  ('valores -> tipo VARIABLE COMMA valores','valores',4,'p_valores','main.py',173),
  ('Bool -> TRUE','Bool',1,'p_Bool','main.py',176),
  ('Bool -> FALSE','Bool',1,'p_Bool','main.py',177),
  ('valor -> VARIABLE','valor',1,'p_valor','main.py',182),
  ('valor -> NUMBER','valor',1,'p_valor','main.py',183),
  ('valor -> FLOAT','valor',1,'p_valor','main.py',184),
  ('valor -> CHAINCHAR','valor',1,'p_valor','main.py',185),
  ('valor -> Bool','valor',1,'p_valor','main.py',186),
  ('valor -> operacion','valor',1,'p_valor','main.py',187),
  ('valor -> tupla','valor',1,'p_valor','main.py',188),
  ('tipo -> MAP','tipo',1,'p_tipo','main.py',191),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','main.py',192),
  ('tipo -> STRING','tipo',1,'p_tipo','main.py',193),
  ('tipo -> INT','tipo',1,'p_tipo','main.py',194),
  ('tipo -> SET','tipo',1,'p_tipo','main.py',195),
  ('tipo -> LIST','tipo',1,'p_tipo','main.py',196),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','main.py',197),
  ('tipo -> FINAL','tipo',1,'p_tipo','main.py',198),
  ('tipo -> CONST','tipo',1,'p_tipo','main.py',199),
  ('tipo -> DYNAMIC','tipo',1,'p_tipo','main.py',200),
  ('operacion -> valor operador expresion','operacion',3,'p_operacion','main.py',204),
  ('expresion -> LPAREN valor operador expresion RPAREN','expresion',5,'p_expresion','main.py',207),
  ('expresion -> valor','expresion',1,'p_expresion','main.py',208),
  ('funcion -> VARIABLE LPAREN valores RPAREN','funcion',4,'p_funcion','main.py',211),
  ('funcion_Data -> VARIABLE DOT VARIABLE LPAREN valores RPAREN DOTCOMMA','funcion_Data',7,'p_funcion_Data','main.py',214),
  ('sentencia_Switch -> SWITCH LPAREN valor RPAREN LBRACE caso RBRACE','sentencia_Switch',7,'p_sentencia_Switch','main.py',218),
  ('caso -> CASE valor TWODOTS programa BREAK DOTCOMMA caso','caso',7,'p_caso','main.py',221),
  ('caso -> CASE valor TWODOTS programa BREAK DOTCOMMA','caso',6,'p_caso','main.py',222),
  ('funcion_flecha -> tipo VARIABLE LPAREN valores RPAREN ARROWFUNCTION programa DOTCOMMA','funcion_flecha',8,'p_funcion_flecha','main.py',228),
  ('Conjunto -> SET VARIABLE EQUALS cuerpo_conjunto DOTCOMMA','Conjunto',5,'p_Conjunto','main.py',234),
  ('Conjunto -> SET LANGLE tipo RANGLE VARIABLE EQUALS cuerpo_conjunto DOTCOMMA','Conjunto',8,'p_Conjunto','main.py',235),
  ('cuerpo_conjunto -> LBRACE valores RBRACE','cuerpo_conjunto',3,'p_cuerpo_conjunto','main.py',238),
  ('cuerpo_conjunto -> LBRACE RBRACE','cuerpo_conjunto',2,'p_cuerpo_conjunto','main.py',239),
  ('operador -> PLUS','operador',1,'p_operador','main.py',243),
  ('operador -> MINUS','operador',1,'p_operador','main.py',244),
  ('operador -> TIMES','operador',1,'p_operador','main.py',245),
  ('operador -> DIVIDE','operador',1,'p_operador','main.py',246),
  ('ciclo_for -> FOR LPAREN declaracion condicion DOTCOMMA contador RPAREN LBRACE programa RBRACE','ciclo_for',10,'p_ciclo_for','main.py',253),
  ('contador -> VARIABLE PLUS PLUS','contador',3,'p_contador','main.py',258),
  ('contador -> VARIABLE PLUS EQUALS valor','contador',4,'p_contador','main.py',259),
  ('contador -> VARIABLE MINUS MINUS','contador',3,'p_contador','main.py',260),
  ('contador -> VARIABLE MINUS EQUALS valor','contador',4,'p_contador','main.py',261),
  ('funcion_Anonima -> VAR VARIABLE EQUALS tupla LBRACE programa RBRACE DOTCOMMA','funcion_Anonima',8,'p_funcion_Anonima','main.py',267),
  ('funcion_Anonima -> tupla LBRACE programa RBRACE DOTCOMMA','funcion_Anonima',5,'p_funcion_Anonima','main.py',268),
  ('diccionario -> MAP LANGLE tipo COMMA tipo RANGLE VARIABLE EQUALS cuerpo_Diccionario DOTCOMMA','diccionario',10,'p_diccionario','main.py',273),
  ('cuerpo_Diccionario -> LBRACE duplas RBRACE','cuerpo_Diccionario',3,'p_cuerpo_Diccionario','main.py',277),
  ('cuerpo_Diccionario -> LBRACE RBRACE','cuerpo_Diccionario',2,'p_cuerpo_Diccionario','main.py',278),
  ('duplas -> dupla','duplas',1,'p_duplas','main.py',281),
  ('duplas -> dupla COMMA duplas','duplas',3,'p_duplas','main.py',282),
  ('dupla -> valor TWODOTS valor','dupla',3,'p_dupla','main.py',286),
]
