
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ADMIRATION AND ARROWFUNCTION AS BOOLEAN BREAK CASE CATCH CHAINCHAR CLASS COMMA COMMENTBLOCK COMMENTLINE CONST DEF DEFAULT DIVIDE DOLLAR DOT DOTCOMMA DOUBLE DYNAMIC ELIF ELSE ENUM EQUALS EXTENDS FALSE FINAL FINALLY FLOAT FOR IF IN INT INTEGERDIVISION INTERFACE IS LANGLE LBRACE LBRACKET LIST LPAREN MAIN MAP METHOD MINUS MOD MODULE NEQ NEW NULL NUMBER OR PLUS PRINT PRIVATE PROTECTED PUBLIC RANGLE RBRACE RBRACKET RETURN RPAREN SET STATIC STRING SUPER SWITCH THIS TIMES TRUE TRY TUPLE TWODOTS TYPEDEF VAR VARIABLE VOID WHILEprograma : cuerpo\n                | programa cuerpocuerpo : impresion\n              | declaracion\n              | operacion\n              | comentario\n              | estructuras_de_Control\n              | returnestructuras_de_Control : sentencia_If\n                            | sentencia_Switch\n                            | ciclo_for\n                            | funcion_Anonima\n                            | diccionario\n                            | Conjunto\n                            | funcion_flecha\n                            | funcion_Void\n                            | funcion\n                            | funcion_Data\n                            | estructura_Listcomentario : COMMENTLINE\n                  | COMMENTBLOCKimpresion : PRINT LPAREN valores RPAREN DOTCOMMA\n                 | PRINT LPAREN CHAINCHAR RPAREN DOTCOMMA\n                 | PRINT LPAREN operacion RPAREN DOTCOMMA\n                 | PRINT LPAREN condiciones RPAREN DOTCOMMA\n                 | PRINT LPAREN RPAREN DOTCOMMA\n     sentencia_If : IF LPAREN condiciones RPAREN LBRACE programa RBRACE else\n                        | IF LPAREN condiciones RPAREN LBRACE programa RBRACE \n    else : ELSE LBRACE programa RBRACE\n    condicion : valor Comparador valorcondiciones : condicion\n                    | condicion conector condiciones\n                    | Bool\n    conector : AND\n                | OR\n    estructura_List : LIST LANGLE tipo RANGLE VARIABLE EQUALS lista DOTCOMMAlista : LBRACKET valores RBRACKETfuncion_Void : VOID VARIABLE LPAREN valores RPAREN LBRACE programa RBRACE\n                    | VOID VARIABLE LPAREN RPAREN LBRACE programa RBRACE\n                    | VOID MAIN LPAREN RPAREN LBRACE programa RBRACEreturn : RETURN valor DOTCOMMAComparador : EQUALS EQUALS\n                    | LANGLE\n                    | RANGLE\n                    | LANGLE EQUALS\n                    | RANGLE EQUALS\n                    | NEQtupla : LPAREN valores RPARENvalores : valor\n               | valor COMMA valoresBool : TRUE\n        | FALSE \n    valor   : VARIABLE\n            | NUMBER\n            | FLOAT\n            | CHAINCHAR\n            | Bool\n            | tupla\n            | lista\n            | cuerpo_conjunto\n            | cuerpo_Diccionario\n    tipo : MAP\n            | DOUBLE\n            | STRING\n            | INT\n            | SET\n            | LIST\n            | BOOLEAN\n            | TUPLE\n    \n    declaracion : tipo VARIABLE EQUALS valor DOTCOMMA\n                | VAR VARIABLE EQUALS valor DOTCOMMA\n    operacion : valor operador expresionexpresion : LPAREN valor operador expresion RPAREN\n                    | valor funcion : VARIABLE LPAREN valores RPARENfuncion_Data : VARIABLE DOT VARIABLE LPAREN valores RPAREN DOTCOMMAsentencia_Switch : SWITCH LPAREN valor RPAREN LBRACE caso RBRACEcaso : CASE valor TWODOTS programa BREAK DOTCOMMA caso \n            | CASE valor TWODOTS programa BREAK DOTCOMMA funcion_flecha : tipo VARIABLE LPAREN valores RPAREN ARROWFUNCTION programa DOTCOMMAfuncion_flecha : tipo VARIABLE LPAREN RPAREN ARROWFUNCTION programa DOTCOMMAConjunto : SET VARIABLE EQUALS cuerpo_conjunto DOTCOMMA\n                    | SET LANGLE tipo RANGLE VARIABLE EQUALS cuerpo_conjunto DOTCOMMAcuerpo_conjunto : LBRACE valores RBRACE\n                | LBRACE RBRACE operador : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE \n    ciclo_for : FOR LPAREN declaracion condicion DOTCOMMA contador RPAREN LBRACE programa RBRACE\n    contador : VARIABLE PLUS PLUS\n                | VARIABLE PLUS EQUALS valor\n                | VARIABLE MINUS MINUS\n                | VARIABLE MINUS EQUALS valor\n    funcion_Anonima : tipo VARIABLE EQUALS tupla LBRACE programa RBRACE DOTCOMMA\n                    | tupla LBRACE programa RBRACE DOTCOMMA\n    diccionario : MAP LANGLE tipo COMMA tipo RANGLE VARIABLE EQUALS cuerpo_Diccionario DOTCOMMA\n    cuerpo_Diccionario : LBRACE duplas RBRACE\n                    | LBRACE RBRACE\n    duplas : dupla\n              | dupla COMMA duplas\n    dupla : valor TWODOTS valor\n    '
    
_lr_action_items = {'PRINT':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[9,9,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,9,-85,-48,-74,-72,-41,9,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,9,9,-71,-82,-96,9,9,9,9,9,9,9,9,9,9,9,-81,-76,-73,-28,-77,9,-39,-40,-95,-80,-83,-36,-27,9,9,-38,9,9,9,-97,9,-90,-29,]),'VAR':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,81,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[15,15,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,15,-85,15,-48,-74,-72,-41,15,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,15,15,-71,-82,-96,15,15,15,15,15,15,15,15,15,15,15,-81,-76,-73,-28,-77,15,-39,-40,-95,-80,-83,-36,-27,15,15,-38,15,15,15,-97,15,-90,-29,]),'COMMENTLINE':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[16,16,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,16,-85,-48,-74,-72,-41,16,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,16,16,-71,-82,-96,16,16,16,16,16,16,16,16,16,16,16,-81,-76,-73,-28,-77,16,-39,-40,-95,-80,-83,-36,-27,16,16,-38,16,16,16,-97,16,-90,-29,]),'COMMENTBLOCK':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[17,17,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,17,-85,-48,-74,-72,-41,17,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,17,17,-71,-82,-96,17,17,17,17,17,17,17,17,17,17,17,-81,-76,-73,-28,-77,17,-39,-40,-95,-80,-83,-36,-27,17,17,-38,17,17,17,-97,17,-90,-29,]),'RETURN':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[29,29,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,29,-85,-48,-74,-72,-41,29,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,29,29,-71,-82,-96,29,29,29,29,29,29,29,29,29,29,29,-81,-76,-73,-28,-77,29,-39,-40,-95,-80,-83,-36,-27,29,29,-38,29,29,29,-97,29,-90,-29,]),'MAP':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,69,71,72,73,76,81,93,99,100,103,111,114,115,123,125,142,146,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[30,30,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,104,104,104,30,-85,104,-48,-74,-72,-41,30,-84,-98,-37,-26,-75,104,-22,-23,-24,-25,-70,30,30,-71,-82,-96,30,30,30,30,30,30,30,30,30,30,30,-81,-76,-73,-28,-77,30,-39,-40,-95,-80,-83,-36,-27,30,30,-38,30,30,30,-97,30,-90,-29,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,69,71,72,73,76,81,93,99,100,103,111,114,115,123,125,142,146,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[31,31,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,31,31,31,31,-85,31,-48,-74,-72,-41,31,-84,-98,-37,-26,-75,31,-22,-23,-24,-25,-70,31,31,-71,-82,-96,31,31,31,31,31,31,31,31,31,31,31,-81,-76,-73,-28,-77,31,-39,-40,-95,-80,-83,-36,-27,31,31,-38,31,31,31,-97,31,-90,-29,]),'STRING':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,69,71,72,73,76,81,93,99,100,103,111,114,115,123,125,142,146,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[32,32,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,32,32,32,32,-85,32,-48,-74,-72,-41,32,-84,-98,-37,-26,-75,32,-22,-23,-24,-25,-70,32,32,-71,-82,-96,32,32,32,32,32,32,32,32,32,32,32,-81,-76,-73,-28,-77,32,-39,-40,-95,-80,-83,-36,-27,32,32,-38,32,32,32,-97,32,-90,-29,]),'INT':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,69,71,72,73,76,81,93,99,100,103,111,114,115,123,125,142,146,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[33,33,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,33,33,33,33,-85,33,-48,-74,-72,-41,33,-84,-98,-37,-26,-75,33,-22,-23,-24,-25,-70,33,33,-71,-82,-96,33,33,33,33,33,33,33,33,33,33,33,-81,-76,-73,-28,-77,33,-39,-40,-95,-80,-83,-36,-27,33,33,-38,33,33,33,-97,33,-90,-29,]),'SET':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,69,71,72,73,76,81,93,99,100,103,111,114,115,123,125,142,146,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[34,34,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,106,106,106,34,-85,106,-48,-74,-72,-41,34,-84,-98,-37,-26,-75,106,-22,-23,-24,-25,-70,34,34,-71,-82,-96,34,34,34,34,34,34,34,34,34,34,34,-81,-76,-73,-28,-77,34,-39,-40,-95,-80,-83,-36,-27,34,34,-38,34,34,34,-97,34,-90,-29,]),'LIST':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,69,71,72,73,76,81,93,99,100,103,111,114,115,123,125,142,146,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[35,35,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,107,107,107,35,-85,107,-48,-74,-72,-41,35,-84,-98,-37,-26,-75,107,-22,-23,-24,-25,-70,35,35,-71,-82,-96,35,35,35,35,35,35,35,35,35,35,35,-81,-76,-73,-28,-77,35,-39,-40,-95,-80,-83,-36,-27,35,35,-38,35,35,35,-97,35,-90,-29,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,69,71,72,73,76,81,93,99,100,103,111,114,115,123,125,142,146,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[36,36,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,36,36,36,36,-85,36,-48,-74,-72,-41,36,-84,-98,-37,-26,-75,36,-22,-23,-24,-25,-70,36,36,-71,-82,-96,36,36,36,36,36,36,36,36,36,36,36,-81,-76,-73,-28,-77,36,-39,-40,-95,-80,-83,-36,-27,36,36,-38,36,36,36,-97,36,-90,-29,]),'TUPLE':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,69,71,72,73,76,81,93,99,100,103,111,114,115,123,125,142,146,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[37,37,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,37,37,37,37,-85,37,-48,-74,-72,-41,37,-84,-98,-37,-26,-75,37,-22,-23,-24,-25,-70,37,37,-71,-82,-96,37,37,37,37,37,37,37,37,37,37,37,-81,-76,-73,-28,-77,37,-39,-40,-95,-80,-83,-36,-27,37,37,-38,37,37,37,-97,37,-90,-29,]),'VARIABLE':([0,1,2,3,4,5,6,7,8,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,49,50,51,52,53,54,57,58,60,61,62,63,64,65,66,73,74,76,80,93,94,95,96,99,100,101,102,103,104,106,107,111,114,115,116,117,119,120,121,123,125,129,131,132,133,134,135,136,142,143,148,149,150,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,186,187,189,190,191,192,193,196,199,201,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,234,236,237,239,240,241,242,245,247,249,250,],[13,13,-1,-3,-4,-5,-6,-7,-8,57,-56,59,67,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,57,-62,-63,-64,-65,70,-67,-68,-69,-54,-55,-57,-59,-60,-61,57,82,-51,-52,57,-2,57,-53,-58,57,98,57,-86,-87,-88,-89,13,57,-85,57,-48,57,57,57,-74,-72,57,57,-41,-62,-66,-67,13,-84,-98,57,57,57,158,57,-37,-26,57,-43,-44,-47,57,-34,-35,-75,57,57,181,182,-22,-23,-24,-25,-42,-45,-46,-70,13,13,57,-71,-82,-96,13,203,57,13,13,13,13,13,212,13,57,13,13,13,13,-81,-76,-73,-28,-77,13,-39,-40,-95,-80,-83,-36,-27,13,13,57,57,-38,57,13,13,13,-97,13,-90,-29,]),'NUMBER':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,38,39,40,42,43,44,46,50,51,52,53,54,57,58,60,62,63,64,65,66,73,74,76,80,93,94,95,96,99,100,101,102,103,111,114,115,116,117,119,121,123,125,129,131,132,133,134,135,136,142,143,148,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,187,189,190,191,192,193,199,201,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,234,236,237,239,240,241,242,245,247,249,250,],[38,38,-1,-3,-4,-5,-6,-7,-8,38,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,38,-54,-55,-57,-59,-60,-61,38,-51,-52,38,-2,38,-53,-58,38,38,-86,-87,-88,-89,38,38,-85,38,-48,38,38,38,-74,-72,38,38,-41,38,-84,-98,38,38,38,38,-37,-26,38,-43,-44,-47,38,-34,-35,-75,38,38,-22,-23,-24,-25,-42,-45,-46,-70,38,38,38,-71,-82,-96,38,38,38,38,38,38,38,38,38,38,38,38,38,-81,-76,-73,-28,-77,38,-39,-40,-95,-80,-83,-36,-27,38,38,38,38,-38,38,38,38,38,-97,38,-90,-29,]),'FLOAT':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,38,39,40,42,43,44,46,50,51,52,53,54,57,58,60,62,63,64,65,66,73,74,76,80,93,94,95,96,99,100,101,102,103,111,114,115,116,117,119,121,123,125,129,131,132,133,134,135,136,142,143,148,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,187,189,190,191,192,193,199,201,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,234,236,237,239,240,241,242,245,247,249,250,],[39,39,-1,-3,-4,-5,-6,-7,-8,39,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,39,-54,-55,-57,-59,-60,-61,39,-51,-52,39,-2,39,-53,-58,39,39,-86,-87,-88,-89,39,39,-85,39,-48,39,39,39,-74,-72,39,39,-41,39,-84,-98,39,39,39,39,-37,-26,39,-43,-44,-47,39,-34,-35,-75,39,39,-22,-23,-24,-25,-42,-45,-46,-70,39,39,39,-71,-82,-96,39,39,39,39,39,39,39,39,39,39,39,39,39,-81,-76,-73,-28,-77,39,-39,-40,-95,-80,-83,-36,-27,39,39,39,39,-38,39,39,39,39,-97,39,-90,-29,]),'CHAINCHAR':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,38,39,40,42,43,44,46,50,51,52,53,54,57,58,60,62,63,64,65,66,73,74,76,80,93,94,95,96,99,100,101,102,103,111,114,115,116,117,119,121,123,125,129,131,132,133,134,135,136,142,143,148,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,187,189,190,191,192,193,199,201,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,234,236,237,239,240,241,242,245,247,249,250,],[11,11,-1,-3,-4,-5,-6,-7,-8,11,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,11,-54,-55,-57,-59,-60,-61,11,-51,-52,11,-2,87,-53,-58,11,11,-86,-87,-88,-89,11,11,-85,11,-48,11,11,11,-74,-72,11,11,-41,11,-84,-98,11,11,11,11,-37,-26,11,-43,-44,-47,11,-34,-35,-75,11,11,-22,-23,-24,-25,-42,-45,-46,-70,11,11,11,-71,-82,-96,11,11,11,11,11,11,11,11,11,11,11,11,11,-81,-76,-73,-28,-77,11,-39,-40,-95,-80,-83,-36,-27,11,11,11,11,-38,11,11,11,11,-97,11,-90,-29,]),'IF':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[45,45,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,45,-85,-48,-74,-72,-41,45,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,45,45,-71,-82,-96,45,45,45,45,45,45,45,45,45,45,45,-81,-76,-73,-28,-77,45,-39,-40,-95,-80,-83,-36,-27,45,45,-38,45,45,45,-97,45,-90,-29,]),'SWITCH':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[47,47,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,47,-85,-48,-74,-72,-41,47,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,47,47,-71,-82,-96,47,47,47,47,47,47,47,47,47,47,47,-81,-76,-73,-28,-77,47,-39,-40,-95,-80,-83,-36,-27,47,47,-38,47,47,47,-97,47,-90,-29,]),'FOR':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[48,48,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,48,-85,-48,-74,-72,-41,48,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,48,48,-71,-82,-96,48,48,48,48,48,48,48,48,48,48,48,-81,-76,-73,-28,-77,48,-39,-40,-95,-80,-83,-36,-27,48,48,-38,48,48,48,-97,48,-90,-29,]),'VOID':([0,1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,73,76,93,99,100,103,111,114,115,123,125,142,162,163,164,165,171,172,174,177,179,183,184,189,190,191,192,193,199,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,237,240,241,242,245,247,249,250,],[49,49,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,49,-85,-48,-74,-72,-41,49,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,49,49,-71,-82,-96,49,49,49,49,49,49,49,49,49,49,49,-81,-76,-73,-28,-77,49,-39,-40,-95,-80,-83,-36,-27,49,49,-38,49,49,49,-97,49,-90,-29,]),'TRUE':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,38,39,40,42,43,44,46,50,51,52,53,54,57,58,60,62,63,64,65,66,73,74,76,80,93,94,95,96,99,100,101,102,103,111,114,115,116,117,119,121,123,125,129,131,132,133,134,135,136,142,143,148,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,187,189,190,191,192,193,199,201,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,234,236,237,239,240,241,242,245,247,249,250,],[50,50,-1,-3,-4,-5,-6,-7,-8,50,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,50,-54,-55,-57,-59,-60,-61,50,-51,-52,50,-2,50,-53,-58,50,50,-86,-87,-88,-89,50,50,-85,50,-48,50,50,50,-74,-72,50,50,-41,50,-84,-98,50,50,50,50,-37,-26,50,-43,-44,-47,50,-34,-35,-75,50,50,-22,-23,-24,-25,-42,-45,-46,-70,50,50,50,-71,-82,-96,50,50,50,50,50,50,50,50,50,50,50,50,50,-81,-76,-73,-28,-77,50,-39,-40,-95,-80,-83,-36,-27,50,50,50,50,-38,50,50,50,50,-97,50,-90,-29,]),'FALSE':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,38,39,40,42,43,44,46,50,51,52,53,54,57,58,60,62,63,64,65,66,73,74,76,80,93,94,95,96,99,100,101,102,103,111,114,115,116,117,119,121,123,125,129,131,132,133,134,135,136,142,143,148,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,187,189,190,191,192,193,199,201,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,234,236,237,239,240,241,242,245,247,249,250,],[51,51,-1,-3,-4,-5,-6,-7,-8,51,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,51,-54,-55,-57,-59,-60,-61,51,-51,-52,51,-2,51,-53,-58,51,51,-86,-87,-88,-89,51,51,-85,51,-48,51,51,51,-74,-72,51,51,-41,51,-84,-98,51,51,51,51,-37,-26,51,-43,-44,-47,51,-34,-35,-75,51,51,-22,-23,-24,-25,-42,-45,-46,-70,51,51,51,-71,-82,-96,51,51,51,51,51,51,51,51,51,51,51,51,51,-81,-76,-73,-28,-77,51,-39,-40,-95,-80,-83,-36,-27,51,51,51,51,-38,51,51,51,51,-97,51,-90,-29,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,38,39,40,42,43,44,45,46,47,48,50,51,52,53,54,57,58,59,60,62,63,64,65,66,73,74,76,80,82,83,93,94,95,96,98,99,100,101,102,103,111,114,115,116,117,119,121,123,125,129,131,132,133,134,135,136,142,143,148,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,187,189,190,191,192,193,199,201,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,234,236,237,239,240,241,242,245,247,249,250,],[10,10,-1,-3,-4,-5,-6,-7,-8,54,10,-56,60,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,10,-54,-55,-57,-59,-60,-61,74,10,80,81,-51,-52,10,-2,10,-53,-58,96,10,101,-86,-87,-88,-89,10,10,-85,10,121,122,-48,10,10,10,143,-74,-72,10,10,-41,10,-84,-98,10,10,10,10,-37,-26,10,-43,-44,-47,10,-34,-35,-75,10,10,-22,-23,-24,-25,-42,-45,-46,-70,10,10,101,-71,-82,-96,10,10,10,10,10,10,10,10,10,10,10,10,10,-81,-76,-73,-28,-77,10,-39,-40,-95,-80,-83,-36,-27,10,10,10,10,-38,10,10,10,10,-97,10,-90,-29,]),'LBRACKET':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,38,39,40,42,43,44,46,50,51,52,53,54,57,58,60,62,63,64,65,66,73,74,76,80,93,94,95,96,99,100,101,102,103,111,114,115,116,117,119,121,123,125,129,131,132,133,134,135,136,142,143,148,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,187,189,190,191,192,193,198,199,201,204,205,206,208,209,210,211,215,216,221,222,223,224,225,227,228,229,231,232,234,236,237,239,240,241,242,245,247,249,250,],[52,52,-1,-3,-4,-5,-6,-7,-8,52,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,52,-54,-55,-57,-59,-60,-61,52,-51,-52,52,-2,52,-53,-58,52,52,-86,-87,-88,-89,52,52,-85,52,-48,52,52,52,-74,-72,52,52,-41,52,-84,-98,52,52,52,52,-37,-26,52,-43,-44,-47,52,-34,-35,-75,52,52,-22,-23,-24,-25,-42,-45,-46,-70,52,52,52,-71,-82,-96,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-81,-76,-73,-28,-77,52,-39,-40,-95,-80,-83,-36,-27,52,52,52,52,-38,52,52,52,52,-97,52,-90,-29,]),'LBRACE':([0,1,2,3,4,5,6,7,8,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,38,39,40,41,42,43,44,46,50,51,52,53,54,57,58,60,62,63,64,65,66,73,74,76,80,93,94,95,96,99,100,101,102,103,108,111,114,115,116,117,119,121,123,125,129,131,132,133,134,135,136,139,142,143,148,152,156,160,161,162,163,164,165,167,168,169,171,172,174,176,177,179,183,184,187,188,189,190,191,192,193,197,199,201,204,205,206,208,209,210,211,215,216,218,221,222,223,224,225,226,227,228,229,230,231,232,234,236,237,239,240,241,242,245,247,249,250,],[46,46,-1,-3,-4,-5,-6,-7,-8,46,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,46,-54,-55,-57,73,-59,-60,-61,46,-51,-52,46,-2,46,-53,-58,46,46,-86,-87,-88,-89,46,46,-85,46,-48,46,46,46,-74,-72,46,46,-41,148,46,-84,-98,46,46,46,46,-37,-26,46,-43,-44,-47,46,-34,-35,172,-75,46,46,184,185,189,190,-22,-23,-24,-25,-42,-45,-46,-70,46,46,46,-71,-82,-96,46,46,204,46,46,46,46,46,148,46,46,46,46,46,46,-81,-76,-73,-28,-77,232,46,-39,-40,-95,-80,239,-83,-36,-27,240,46,46,46,46,-38,46,46,46,46,-97,46,-90,-29,]),'$end':([1,2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,76,93,99,100,103,114,115,123,125,142,162,163,164,165,171,177,179,183,209,210,211,215,216,222,223,224,225,227,228,229,237,245,249,250,],[0,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,-85,-48,-74,-72,-41,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,-71,-82,-96,-81,-76,-73,-28,-77,-39,-40,-95,-80,-83,-36,-27,-38,-97,-90,-29,]),'RBRACE':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,46,50,51,53,56,57,58,75,76,77,78,79,93,99,100,103,111,114,115,123,125,137,142,148,153,154,162,163,164,165,171,177,179,183,191,199,200,205,206,209,210,211,215,216,221,222,223,224,225,227,228,229,237,239,242,245,247,249,250,251,252,],[-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,76,-51,-52,-2,-49,-53,-58,114,-85,115,-49,-100,-48,-74,-72,-41,151,-84,-98,-37,-26,-50,-75,180,-102,-101,-22,-23,-24,-25,-70,-71,-82,-96,207,215,216,222,223,-81,-76,-73,-28,-77,237,-39,-40,-95,-80,-83,-36,-27,-38,246,249,-97,250,-90,-29,-79,-78,]),'DOTCOMMA':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,68,76,86,93,99,100,103,114,115,123,124,125,126,127,128,138,139,142,145,147,151,157,162,163,164,165,166,171,177,179,180,183,193,194,207,208,209,210,211,213,214,215,216,222,223,224,225,227,228,229,237,238,245,246,248,249,250,],[-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,103,-85,125,-48,-74,-72,-41,-84,-98,-37,162,-26,163,164,165,171,-58,-75,177,179,183,186,-22,-23,-24,-25,-30,-70,-71,-82,-85,-96,209,210,224,225,-81,-76,-73,227,228,-28,-77,-39,-40,-95,-80,-83,-36,-27,-38,245,-97,-99,251,-90,-29,]),'BREAK':([2,3,4,5,6,7,8,11,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,42,43,44,50,51,53,57,58,76,93,99,100,103,114,115,123,125,142,162,163,164,165,171,177,179,183,209,210,211,215,216,222,223,224,225,227,228,229,237,241,245,249,250,],[-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-57,-59,-60,-61,-51,-52,-2,-53,-58,-85,-48,-74,-72,-41,-84,-98,-37,-26,-75,-22,-23,-24,-25,-70,-71,-82,-96,-81,-76,-73,-28,-77,-39,-40,-95,-80,-83,-36,-27,-38,248,-97,-90,-29,]),'PLUS':([11,13,14,38,39,40,41,42,43,44,50,51,57,58,76,87,90,92,93,114,115,123,144,203,219,],[-56,-53,63,-54,-55,-57,-58,-59,-60,-61,-51,-52,-53,-58,-85,-56,63,-57,-48,-84,-98,-37,63,219,233,]),'MINUS':([11,13,14,38,39,40,41,42,43,44,50,51,57,58,76,87,90,92,93,114,115,123,144,203,220,],[-56,-53,64,-54,-55,-57,-58,-59,-60,-61,-51,-52,-53,-58,-85,-56,64,-57,-48,-84,-98,-37,64,220,235,]),'TIMES':([11,13,14,38,39,40,41,42,43,44,50,51,57,58,76,87,90,92,93,114,115,123,144,],[-56,-53,65,-54,-55,-57,-58,-59,-60,-61,-51,-52,-53,-58,-85,-56,65,-57,-48,-84,-98,-37,65,]),'DIVIDE':([11,13,14,38,39,40,41,42,43,44,50,51,57,58,76,87,90,92,93,114,115,123,144,],[-56,-53,66,-54,-55,-57,-58,-59,-60,-61,-51,-52,-53,-58,-85,-56,66,-57,-48,-84,-98,-37,66,]),'COMMA':([11,31,32,33,36,37,38,39,40,42,43,44,50,51,56,57,58,76,78,79,87,90,92,93,104,105,106,107,114,115,123,144,153,],[-56,-63,-64,-65,-68,-69,-54,-55,-57,-59,-60,-61,-51,-52,94,-53,-58,-85,94,117,-56,94,-57,-48,-62,146,-66,-67,-84,-98,-37,94,-102,]),'RPAREN':([11,38,39,40,42,43,44,50,51,54,55,56,57,58,76,85,87,88,89,90,91,92,93,96,97,99,100,112,114,115,118,121,122,123,137,140,144,159,166,170,175,195,202,211,233,235,243,244,],[-56,-54,-55,-57,-59,-60,-61,-51,-52,86,93,-49,-53,-58,-85,124,126,127,128,-49,-31,-33,-48,141,142,-74,-72,152,-84,-98,156,160,161,-37,-50,173,-49,188,-30,-32,194,211,218,-73,-91,-93,-92,-94,]),'TWODOTS':([11,38,39,40,42,43,44,50,51,57,58,76,78,93,114,115,123,155,217,],[-56,-54,-55,-57,-59,-60,-61,-51,-52,-53,-58,-85,116,-48,-84,-98,-37,116,231,]),'RBRACKET':([11,38,39,40,42,43,44,50,51,56,57,58,76,84,93,114,115,123,137,],[-56,-54,-55,-57,-59,-60,-61,-51,-52,-49,-53,-58,-85,123,-48,-84,-98,-37,-50,]),'EQUALS':([11,38,39,40,42,43,44,50,51,57,58,59,67,70,76,87,90,92,93,113,114,115,123,130,131,132,158,181,182,212,219,220,],[-56,-54,-55,-57,-59,-60,-61,-51,-52,-53,-58,95,102,108,-85,-56,130,-57,-48,130,-84,-98,-37,167,168,169,187,197,198,226,234,236,]),'LANGLE':([11,30,34,35,38,39,40,42,43,44,50,51,57,58,76,87,90,92,93,113,114,115,123,],[-56,69,71,72,-54,-55,-57,-59,-60,-61,-51,-52,-53,-58,-85,-56,131,-57,-48,131,-84,-98,-37,]),'RANGLE':([11,31,32,33,36,37,38,39,40,42,43,44,50,51,57,58,76,87,90,92,93,104,106,107,109,110,113,114,115,123,178,],[-56,-63,-64,-65,-68,-69,-54,-55,-57,-59,-60,-61,-51,-52,-53,-58,-85,-56,132,-57,-48,-62,-66,-67,149,150,132,-84,-98,-37,196,]),'NEQ':([11,38,39,40,42,43,44,50,51,57,58,76,87,90,92,93,113,114,115,123,],[-56,-54,-55,-57,-59,-60,-61,-51,-52,-53,-58,-85,-56,133,-57,-48,133,-84,-98,-37,]),'AND':([11,38,39,40,42,43,44,50,51,57,58,76,91,93,114,115,123,166,],[-56,-54,-55,-57,-59,-60,-61,-51,-52,-53,-58,-85,135,-48,-84,-98,-37,-30,]),'OR':([11,38,39,40,42,43,44,50,51,57,58,76,91,93,114,115,123,166,],[-56,-54,-55,-57,-59,-60,-61,-51,-52,-53,-58,-85,136,-48,-84,-98,-37,-30,]),'DOT':([13,],[61,]),'MAIN':([49,],[83,]),'ARROWFUNCTION':([141,173,],[174,192,]),'CASE':([185,251,],[201,201,]),'ELSE':([215,],[230,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,73,172,174,184,189,190,192,204,231,232,240,],[1,111,191,193,199,205,206,208,221,241,242,247,]),'cuerpo':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[2,53,2,53,2,2,2,2,2,53,2,53,53,2,53,53,53,53,2,2,2,53,53,53,]),'impresion':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'declaracion':([0,1,73,81,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[4,4,4,119,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'operacion':([0,1,54,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[5,5,88,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'comentario':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'estructuras_de_Control':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'return':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'tipo':([0,1,69,71,72,73,81,111,146,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[12,12,105,109,110,12,120,12,178,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'valor':([0,1,10,29,46,52,54,60,62,73,74,80,94,95,96,101,102,111,116,117,119,121,129,134,143,148,172,174,176,184,187,189,190,191,192,193,199,201,204,205,206,208,221,231,232,234,236,239,240,241,242,247,],[14,14,56,68,78,56,90,56,99,14,113,118,56,138,56,144,145,14,153,155,113,56,166,113,56,56,14,14,99,14,138,14,14,14,14,14,14,217,14,14,14,14,14,14,14,243,244,155,14,14,14,14,]),'sentencia_If':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'sentencia_Switch':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'ciclo_for':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'funcion_Anonima':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'diccionario':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'Conjunto':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'funcion_flecha':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'funcion_Void':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'funcion':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'funcion_Data':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'estructura_List':([0,1,73,111,172,174,184,189,190,191,192,193,199,204,205,206,208,221,231,232,240,241,242,247,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'Bool':([0,1,10,29,46,52,54,60,62,73,74,80,94,95,96,101,102,111,116,117,119,121,129,134,143,148,172,174,176,184,187,189,190,191,192,193,199,201,204,205,206,208,221,231,232,234,236,239,240,241,242,247,],[40,40,40,40,40,40,92,40,40,40,92,40,40,40,40,40,40,40,40,40,40,40,40,92,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'tupla':([0,1,10,29,46,52,54,60,62,73,74,80,94,95,96,101,102,111,116,117,119,121,129,134,143,148,172,174,176,184,187,189,190,191,192,193,199,201,204,205,206,208,221,231,232,234,236,239,240,241,242,247,],[41,41,58,58,58,58,58,58,58,41,58,58,58,139,58,58,58,41,58,58,58,58,58,58,58,58,41,41,58,41,58,41,41,41,41,41,41,58,41,41,41,41,41,41,41,58,58,58,41,41,41,41,]),'lista':([0,1,10,29,46,52,54,60,62,73,74,80,94,95,96,101,102,111,116,117,119,121,129,134,143,148,172,174,176,184,187,189,190,191,192,193,198,199,201,204,205,206,208,221,231,232,234,236,239,240,241,242,247,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,214,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'cuerpo_conjunto':([0,1,10,29,46,52,54,60,62,73,74,80,94,95,96,101,102,108,111,116,117,119,121,129,134,143,148,172,174,176,184,187,189,190,191,192,193,197,199,201,204,205,206,208,221,231,232,234,236,239,240,241,242,247,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,147,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,213,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'cuerpo_Diccionario':([0,1,10,29,46,52,54,60,62,73,74,80,94,95,96,101,102,111,116,117,119,121,129,134,143,148,172,174,176,184,187,189,190,191,192,193,199,201,204,205,206,208,221,226,231,232,234,236,239,240,241,242,247,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,238,44,44,44,44,44,44,44,44,44,]),'valores':([10,46,52,54,60,94,96,101,121,143,148,],[55,75,84,85,97,137,140,55,159,175,75,]),'operador':([14,90,144,],[62,62,176,]),'duplas':([46,117,239,],[77,154,77,]),'dupla':([46,117,239,],[79,79,79,]),'condiciones':([54,74,134,],[89,112,170,]),'condicion':([54,74,119,134,],[91,91,157,91,]),'expresion':([62,176,],[100,195,]),'Comparador':([90,113,],[129,129,]),'conector':([91,],[134,]),'caso':([185,251,],[200,252,]),'contador':([186,],[202,]),'else':([215,],[229,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> cuerpo','programa',1,'p_programa','main.py',24),
  ('programa -> programa cuerpo','programa',2,'p_programa','main.py',25),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','main.py',33),
  ('cuerpo -> declaracion','cuerpo',1,'p_cuerpo','main.py',34),
  ('cuerpo -> operacion','cuerpo',1,'p_cuerpo','main.py',35),
  ('cuerpo -> comentario','cuerpo',1,'p_cuerpo','main.py',36),
  ('cuerpo -> estructuras_de_Control','cuerpo',1,'p_cuerpo','main.py',37),
  ('cuerpo -> return','cuerpo',1,'p_cuerpo','main.py',38),
  ('estructuras_de_Control -> sentencia_If','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',42),
  ('estructuras_de_Control -> sentencia_Switch','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',43),
  ('estructuras_de_Control -> ciclo_for','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',44),
  ('estructuras_de_Control -> funcion_Anonima','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',45),
  ('estructuras_de_Control -> diccionario','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',46),
  ('estructuras_de_Control -> Conjunto','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',47),
  ('estructuras_de_Control -> funcion_flecha','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',48),
  ('estructuras_de_Control -> funcion_Void','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',49),
  ('estructuras_de_Control -> funcion','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',50),
  ('estructuras_de_Control -> funcion_Data','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',51),
  ('estructuras_de_Control -> estructura_List','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',52),
  ('comentario -> COMMENTLINE','comentario',1,'p_comentario','main.py',55),
  ('comentario -> COMMENTBLOCK','comentario',1,'p_comentario','main.py',56),
  ('impresion -> PRINT LPAREN valores RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',60),
  ('impresion -> PRINT LPAREN CHAINCHAR RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',61),
  ('impresion -> PRINT LPAREN operacion RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',62),
  ('impresion -> PRINT LPAREN condiciones RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',63),
  ('impresion -> PRINT LPAREN RPAREN DOTCOMMA','impresion',4,'p_impresion','main.py',64),
  ('sentencia_If -> IF LPAREN condiciones RPAREN LBRACE programa RBRACE else','sentencia_If',8,'p_sentencia_If','main.py',79),
  ('sentencia_If -> IF LPAREN condiciones RPAREN LBRACE programa RBRACE','sentencia_If',7,'p_sentencia_If','main.py',80),
  ('else -> ELSE LBRACE programa RBRACE','else',4,'p_else','main.py',85),
  ('condicion -> valor Comparador valor','condicion',3,'p_condicion','main.py',89),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','main.py',98),
  ('condiciones -> condicion conector condiciones','condiciones',3,'p_condiciones','main.py',99),
  ('condiciones -> Bool','condiciones',1,'p_condiciones','main.py',100),
  ('conector -> AND','conector',1,'p_conector','main.py',111),
  ('conector -> OR','conector',1,'p_conector','main.py',112),
  ('estructura_List -> LIST LANGLE tipo RANGLE VARIABLE EQUALS lista DOTCOMMA','estructura_List',8,'p_estructura_List','main.py',119),
  ('lista -> LBRACKET valores RBRACKET','lista',3,'p_lista','main.py',134),
  ('funcion_Void -> VOID VARIABLE LPAREN valores RPAREN LBRACE programa RBRACE','funcion_Void',8,'p_funcion_Void','main.py',140),
  ('funcion_Void -> VOID VARIABLE LPAREN RPAREN LBRACE programa RBRACE','funcion_Void',7,'p_funcion_Void','main.py',141),
  ('funcion_Void -> VOID MAIN LPAREN RPAREN LBRACE programa RBRACE','funcion_Void',7,'p_funcion_Void','main.py',142),
  ('return -> RETURN valor DOTCOMMA','return',3,'p_return','main.py',155),
  ('Comparador -> EQUALS EQUALS','Comparador',2,'p_Comparador','main.py',160),
  ('Comparador -> LANGLE','Comparador',1,'p_Comparador','main.py',161),
  ('Comparador -> RANGLE','Comparador',1,'p_Comparador','main.py',162),
  ('Comparador -> LANGLE EQUALS','Comparador',2,'p_Comparador','main.py',163),
  ('Comparador -> RANGLE EQUALS','Comparador',2,'p_Comparador','main.py',164),
  ('Comparador -> NEQ','Comparador',1,'p_Comparador','main.py',165),
  ('tupla -> LPAREN valores RPAREN','tupla',3,'p_tupla','main.py',170),
  ('valores -> valor','valores',1,'p_valores','main.py',174),
  ('valores -> valor COMMA valores','valores',3,'p_valores','main.py',175),
  ('Bool -> TRUE','Bool',1,'p_Bool','main.py',185),
  ('Bool -> FALSE','Bool',1,'p_Bool','main.py',186),
  ('valor -> VARIABLE','valor',1,'p_valor','main.py',192),
  ('valor -> NUMBER','valor',1,'p_valor','main.py',193),
  ('valor -> FLOAT','valor',1,'p_valor','main.py',194),
  ('valor -> CHAINCHAR','valor',1,'p_valor','main.py',195),
  ('valor -> Bool','valor',1,'p_valor','main.py',196),
  ('valor -> tupla','valor',1,'p_valor','main.py',197),
  ('valor -> lista','valor',1,'p_valor','main.py',198),
  ('valor -> cuerpo_conjunto','valor',1,'p_valor','main.py',199),
  ('valor -> cuerpo_Diccionario','valor',1,'p_valor','main.py',200),
  ('tipo -> MAP','tipo',1,'p_tipo','main.py',210),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','main.py',211),
  ('tipo -> STRING','tipo',1,'p_tipo','main.py',212),
  ('tipo -> INT','tipo',1,'p_tipo','main.py',213),
  ('tipo -> SET','tipo',1,'p_tipo','main.py',214),
  ('tipo -> LIST','tipo',1,'p_tipo','main.py',215),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','main.py',216),
  ('tipo -> TUPLE','tipo',1,'p_tipo','main.py',217),
  ('declaracion -> tipo VARIABLE EQUALS valor DOTCOMMA','declaracion',5,'p_declaracion','main.py',225),
  ('declaracion -> VAR VARIABLE EQUALS valor DOTCOMMA','declaracion',5,'p_declaracion','main.py',226),
  ('operacion -> valor operador expresion','operacion',3,'p_operacion','main.py',242),
  ('expresion -> LPAREN valor operador expresion RPAREN','expresion',5,'p_expresion','main.py',250),
  ('expresion -> valor','expresion',1,'p_expresion','main.py',251),
  ('funcion -> VARIABLE LPAREN valores RPAREN','funcion',4,'p_funcion','main.py',274),
  ('funcion_Data -> VARIABLE DOT VARIABLE LPAREN valores RPAREN DOTCOMMA','funcion_Data',7,'p_funcion_Data','main.py',277),
  ('sentencia_Switch -> SWITCH LPAREN valor RPAREN LBRACE caso RBRACE','sentencia_Switch',7,'p_sentencia_Switch','main.py',281),
  ('caso -> CASE valor TWODOTS programa BREAK DOTCOMMA caso','caso',7,'p_caso','main.py',284),
  ('caso -> CASE valor TWODOTS programa BREAK DOTCOMMA','caso',6,'p_caso','main.py',285),
  ('funcion_flecha -> tipo VARIABLE LPAREN valores RPAREN ARROWFUNCTION programa DOTCOMMA','funcion_flecha',8,'p_funcion_flecha_param','main.py',291),
  ('funcion_flecha -> tipo VARIABLE LPAREN RPAREN ARROWFUNCTION programa DOTCOMMA','funcion_flecha',7,'p_funcion_flecha_no_param','main.py',298),
  ('Conjunto -> SET VARIABLE EQUALS cuerpo_conjunto DOTCOMMA','Conjunto',5,'p_Conjunto','main.py',304),
  ('Conjunto -> SET LANGLE tipo RANGLE VARIABLE EQUALS cuerpo_conjunto DOTCOMMA','Conjunto',8,'p_Conjunto','main.py',305),
  ('cuerpo_conjunto -> LBRACE valores RBRACE','cuerpo_conjunto',3,'p_cuerpo_conjunto','main.py',324),
  ('cuerpo_conjunto -> LBRACE RBRACE','cuerpo_conjunto',2,'p_cuerpo_conjunto','main.py',325),
  ('operador -> PLUS','operador',1,'p_operador','main.py',333),
  ('operador -> MINUS','operador',1,'p_operador','main.py',334),
  ('operador -> TIMES','operador',1,'p_operador','main.py',335),
  ('operador -> DIVIDE','operador',1,'p_operador','main.py',336),
  ('ciclo_for -> FOR LPAREN declaracion condicion DOTCOMMA contador RPAREN LBRACE programa RBRACE','ciclo_for',10,'p_ciclo_for','main.py',343),
  ('contador -> VARIABLE PLUS PLUS','contador',3,'p_contador','main.py',375),
  ('contador -> VARIABLE PLUS EQUALS valor','contador',4,'p_contador','main.py',376),
  ('contador -> VARIABLE MINUS MINUS','contador',3,'p_contador','main.py',377),
  ('contador -> VARIABLE MINUS EQUALS valor','contador',4,'p_contador','main.py',378),
  ('funcion_Anonima -> tipo VARIABLE EQUALS tupla LBRACE programa RBRACE DOTCOMMA','funcion_Anonima',8,'p_funcion_Anonima','main.py',394),
  ('funcion_Anonima -> tupla LBRACE programa RBRACE DOTCOMMA','funcion_Anonima',5,'p_funcion_Anonima','main.py',395),
  ('diccionario -> MAP LANGLE tipo COMMA tipo RANGLE VARIABLE EQUALS cuerpo_Diccionario DOTCOMMA','diccionario',10,'p_diccionario','main.py',402),
  ('cuerpo_Diccionario -> LBRACE duplas RBRACE','cuerpo_Diccionario',3,'p_cuerpo_Diccionario','main.py',420),
  ('cuerpo_Diccionario -> LBRACE RBRACE','cuerpo_Diccionario',2,'p_cuerpo_Diccionario','main.py',421),
  ('duplas -> dupla','duplas',1,'p_duplas','main.py',430),
  ('duplas -> dupla COMMA duplas','duplas',3,'p_duplas','main.py',431),
  ('dupla -> valor TWODOTS valor','dupla',3,'p_dupla','main.py',442),
]
