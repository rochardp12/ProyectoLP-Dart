
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARROWFUNCTION BOOLEAN BREAK CASE CHAINCHAR COMMA COMMENTBLOCK COMMENTLINE DIVIDE DOLLAR DOT DOTCOMMA DOUBLE ELSE EQUALS FALSE FLOAT FOR IF INT LANGLE LBRACE LBRACKET LIST LPAREN MAIN MAP MINUS NEQ NUMBER OR PLUS PRINT RANGLE RBRACE RBRACKET RETURN RPAREN SET STRING SWITCH TIMES TRUE TUPLE TWODOTS VAR VARIABLE VOIDprograma : cuerpo\n                    | programa cuerpocuerpo : impresion\n                | declaracion\n                | operacion\n                | comentario\n                | estructuras_de_Control\n                | returnestructuras_de_Control : sentencia_If\n                                | sentencia_Switch\n                                | ciclo_for\n                                | funcion_Anonima\n                                | diccionario\n                                | Conjunto\n                                | funcion_flecha\n                                | funcion_Void\n                                | funcion\n                                | funcion_Data\n                                | estructura_Listcomentario : COMMENTLINE\n                    | COMMENTBLOCKimpresion : PRINT LPAREN valores RPAREN DOTCOMMA\n                    | PRINT LPAREN CHAINCHAR RPAREN DOTCOMMA\n                    | PRINT LPAREN operacion RPAREN DOTCOMMA\n                    | PRINT LPAREN condiciones RPAREN DOTCOMMA\n                    | PRINT LPAREN RPAREN DOTCOMMA\n         sentencia_If : IF LPAREN condiciones RPAREN LBRACE programa RBRACE else\n                            | IF LPAREN condiciones RPAREN LBRACE programa RBRACE \n        else : ELSE LBRACE programa RBRACE\n        condicion : valor Comparador valorcondiciones : condicion\n                        | condicion conector condiciones\n                        | Bool\n        conector : AND\n                    | OR\n        estructura_List : LIST LANGLE tipo RANGLE VARIABLE EQUALS lista DOTCOMMAlista : LBRACKET valores RBRACKETfuncion_Void : VOID VARIABLE LPAREN valores RPAREN LBRACE programa RBRACE\n                        | VOID VARIABLE LPAREN RPAREN LBRACE programa RBRACE\n                        | VOID MAIN LPAREN RPAREN LBRACE programa RBRACEreturn : RETURN valor DOTCOMMAComparador : EQUALS EQUALS\n                        | LANGLE\n                        | RANGLE\n                        | LANGLE EQUALS\n                        | RANGLE EQUALS\n                        | NEQtupla : LPAREN valores RPARENvalores : valor\n                | valor COMMA valoresBool : TRUE\n            | FALSE \n        valor   : variable\n                | NUMBER\n                | FLOAT\n                | CHAINCHAR\n                | Bool\n                | tupla\n                | lista\n                | cuerpo_conjunto\n                | cuerpo_Diccionario\n                | operacion\n        variables : variable\n                    | variable COMMA variablesvariable : DOLLAR VARIABLEtipo : MAP\n                | DOUBLE\n                | STRING\n                | INT\n                | SET\n                | LIST\n                | BOOLEAN\n                | TUPLE\n                | VAR\n        \n        declaracion : tipo VARIABLE EQUALS valor DOTCOMMA\n        operacion : valor operador expresionexpresion : LPAREN valor operador expresion RPAREN\n                        | valor funcion : VARIABLE LPAREN valores RPARENfuncion_Data : VARIABLE DOT VARIABLE LPAREN valores RPAREN DOTCOMMAsentencia_Switch : SWITCH LPAREN valor RPAREN LBRACE caso RBRACEcaso : CASE valor TWODOTS programa BREAK DOTCOMMA caso \n                | CASE valor TWODOTS programa BREAK DOTCOMMA funcion_flecha : tipo VARIABLE LPAREN valores RPAREN ARROWFUNCTION cuerpo DOTCOMMAfuncion_flecha : tipo VARIABLE LPAREN RPAREN ARROWFUNCTION cuerpo DOTCOMMAConjunto : SET VARIABLE EQUALS cuerpo_conjunto DOTCOMMA\n                        | SET LANGLE tipo RANGLE VARIABLE EQUALS cuerpo_conjunto DOTCOMMAcuerpo_conjunto : LBRACE valores RBRACE\n                    | LBRACE RBRACE operador : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE \n        ciclo_for : FOR LPAREN declaracion condicion DOTCOMMA contador RPAREN LBRACE programa RBRACE\n        contador : variable PLUS PLUS\n                    | variable PLUS EQUALS valor\n                    | variable MINUS MINUS\n                    | variable MINUS EQUALS valor\n        funcion_Anonima : tipo VARIABLE EQUALS tupla LBRACE programa RBRACE DOTCOMMA\n                        | tupla LBRACE programa RBRACE DOTCOMMA\n        diccionario : MAP LANGLE tipo COMMA tipo RANGLE VARIABLE EQUALS cuerpo_Diccionario DOTCOMMA\n        cuerpo_Diccionario : LBRACE duplas RBRACE\n                        | LBRACE RBRACE\n        duplas : dupla\n                | dupla COMMA duplas\n        dupla : valor TWODOTS valor\n        '
    
_lr_action_items = {'PRINT':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,74,77,85,95,101,102,104,112,115,116,124,126,143,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[9,9,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,9,-89,-65,-48,-78,-76,-41,9,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,9,9,-86,-100,9,9,9,9,9,9,9,9,9,-85,-80,-77,-28,-81,9,-39,-40,-99,-84,-87,-36,-27,9,9,-38,9,9,9,-101,9,-94,-29,]),'COMMENTLINE':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,74,77,85,95,101,102,104,112,115,116,124,126,143,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[15,15,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,15,-89,-65,-48,-78,-76,-41,15,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,15,15,-86,-100,15,15,15,15,15,15,15,15,15,-85,-80,-77,-28,-81,15,-39,-40,-99,-84,-87,-36,-27,15,15,-38,15,15,15,-101,15,-94,-29,]),'COMMENTBLOCK':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,74,77,85,95,101,102,104,112,115,116,124,126,143,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[16,16,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,16,-89,-65,-48,-78,-76,-41,16,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,16,16,-86,-100,16,16,16,16,16,16,16,16,16,-85,-80,-77,-28,-81,16,-39,-40,-99,-84,-87,-36,-27,16,16,-38,16,16,16,-101,16,-94,-29,]),'RETURN':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,74,77,85,95,101,102,104,112,115,116,124,126,143,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[28,28,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,28,-89,-65,-48,-78,-76,-41,28,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,28,28,-86,-100,28,28,28,28,28,28,28,28,28,-85,-80,-77,-28,-81,28,-39,-40,-99,-84,-87,-36,-27,28,28,-38,28,28,28,-101,28,-94,-29,]),'MAP':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[29,29,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,105,105,105,29,-89,105,-65,-48,-78,-76,-41,29,-88,-102,-37,-26,-79,105,-22,-23,-24,-25,-75,29,29,-86,-100,29,29,29,29,29,29,29,29,29,-85,-80,-77,-28,-81,29,-39,-40,-99,-84,-87,-36,-27,29,29,-38,29,29,29,-101,29,-94,-29,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[30,30,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,30,30,30,30,-89,30,-65,-48,-78,-76,-41,30,-88,-102,-37,-26,-79,30,-22,-23,-24,-25,-75,30,30,-86,-100,30,30,30,30,30,30,30,30,30,-85,-80,-77,-28,-81,30,-39,-40,-99,-84,-87,-36,-27,30,30,-38,30,30,30,-101,30,-94,-29,]),'STRING':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[31,31,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,31,31,31,31,-89,31,-65,-48,-78,-76,-41,31,-88,-102,-37,-26,-79,31,-22,-23,-24,-25,-75,31,31,-86,-100,31,31,31,31,31,31,31,31,31,-85,-80,-77,-28,-81,31,-39,-40,-99,-84,-87,-36,-27,31,31,-38,31,31,31,-101,31,-94,-29,]),'INT':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[32,32,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,32,32,32,32,-89,32,-65,-48,-78,-76,-41,32,-88,-102,-37,-26,-79,32,-22,-23,-24,-25,-75,32,32,-86,-100,32,32,32,32,32,32,32,32,32,-85,-80,-77,-28,-81,32,-39,-40,-99,-84,-87,-36,-27,32,32,-38,32,32,32,-101,32,-94,-29,]),'SET':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[33,33,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,107,107,107,33,-89,107,-65,-48,-78,-76,-41,33,-88,-102,-37,-26,-79,107,-22,-23,-24,-25,-75,33,33,-86,-100,33,33,33,33,33,33,33,33,33,-85,-80,-77,-28,-81,33,-39,-40,-99,-84,-87,-36,-27,33,33,-38,33,33,33,-101,33,-94,-29,]),'LIST':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[34,34,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,108,108,108,34,-89,108,-65,-48,-78,-76,-41,34,-88,-102,-37,-26,-79,108,-22,-23,-24,-25,-75,34,34,-86,-100,34,34,34,34,34,34,34,34,34,-85,-80,-77,-28,-81,34,-39,-40,-99,-84,-87,-36,-27,34,34,-38,34,34,34,-101,34,-94,-29,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[35,35,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,35,35,35,35,-89,35,-65,-48,-78,-76,-41,35,-88,-102,-37,-26,-79,35,-22,-23,-24,-25,-75,35,35,-86,-100,35,35,35,35,35,35,35,35,35,-85,-80,-77,-28,-81,35,-39,-40,-99,-84,-87,-36,-27,35,35,-38,35,35,35,-101,35,-94,-29,]),'TUPLE':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[36,36,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,36,36,36,36,-89,36,-65,-48,-78,-76,-41,36,-88,-102,-37,-26,-79,36,-22,-23,-24,-25,-75,36,36,-86,-100,36,36,36,36,36,36,36,36,36,-85,-80,-77,-28,-81,36,-39,-40,-99,-84,-87,-36,-27,36,36,-38,36,36,36,-101,36,-94,-29,]),'VAR':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,70,72,73,74,77,82,85,95,101,102,104,112,115,116,124,126,143,146,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[37,37,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,37,37,37,37,-89,37,-65,-48,-78,-76,-41,37,-88,-102,-37,-26,-79,37,-22,-23,-24,-25,-75,37,37,-86,-100,37,37,37,37,37,37,37,37,37,-85,-80,-77,-28,-81,37,-39,-40,-99,-84,-87,-36,-27,37,37,-38,37,37,37,-101,37,-94,-29,]),'NUMBER':([0,1,2,3,4,5,6,7,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,43,44,45,47,52,53,54,55,56,59,60,62,64,65,66,67,68,74,75,77,81,85,95,96,97,98,101,102,103,104,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,143,144,148,162,163,164,165,167,168,169,171,172,174,176,178,182,183,186,188,189,190,191,198,200,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,233,235,236,238,239,240,241,244,246,248,249,],[39,39,-1,-3,-4,-5,-6,-7,-8,39,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,39,-53,-54,-55,-57,-59,-60,-61,39,-51,-52,39,-2,39,-58,-62,39,39,-90,-91,-92,-93,39,39,-89,39,-65,-48,39,39,39,-78,-76,39,-41,39,-88,-102,39,39,39,39,-37,-26,39,-43,-44,-47,39,-34,-35,-79,39,39,-22,-23,-24,-25,-42,-45,-46,-75,39,39,39,-86,-100,39,39,39,39,39,39,39,39,39,39,39,-85,-80,-77,-28,-81,39,-39,-40,-99,-84,-87,-36,-27,39,39,39,39,-38,39,39,39,39,-101,39,-94,-29,]),'FLOAT':([0,1,2,3,4,5,6,7,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,43,44,45,47,52,53,54,55,56,59,60,62,64,65,66,67,68,74,75,77,81,85,95,96,97,98,101,102,103,104,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,143,144,148,162,163,164,165,167,168,169,171,172,174,176,178,182,183,186,188,189,190,191,198,200,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,233,235,236,238,239,240,241,244,246,248,249,],[40,40,-1,-3,-4,-5,-6,-7,-8,40,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,40,-53,-54,-55,-57,-59,-60,-61,40,-51,-52,40,-2,40,-58,-62,40,40,-90,-91,-92,-93,40,40,-89,40,-65,-48,40,40,40,-78,-76,40,-41,40,-88,-102,40,40,40,40,-37,-26,40,-43,-44,-47,40,-34,-35,-79,40,40,-22,-23,-24,-25,-42,-45,-46,-75,40,40,40,-86,-100,40,40,40,40,40,40,40,40,40,40,40,-85,-80,-77,-28,-81,40,-39,-40,-99,-84,-87,-36,-27,40,40,40,40,-38,40,40,40,40,-101,40,-94,-29,]),'CHAINCHAR':([0,1,2,3,4,5,6,7,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,43,44,45,47,52,53,54,55,56,59,60,62,64,65,66,67,68,74,75,77,81,85,95,96,97,98,101,102,103,104,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,143,144,148,162,163,164,165,167,168,169,171,172,174,176,178,182,183,186,188,189,190,191,198,200,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,233,235,236,238,239,240,241,244,246,248,249,],[11,11,-1,-3,-4,-5,-6,-7,-8,11,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,11,-53,-54,-55,-57,-59,-60,-61,11,-51,-52,11,-2,89,-58,-62,11,11,-90,-91,-92,-93,11,11,-89,11,-65,-48,11,11,11,-78,-76,11,-41,11,-88,-102,11,11,11,11,-37,-26,11,-43,-44,-47,11,-34,-35,-79,11,11,-22,-23,-24,-25,-42,-45,-46,-75,11,11,11,-86,-100,11,11,11,11,11,11,11,11,11,11,11,-85,-80,-77,-28,-81,11,-39,-40,-99,-84,-87,-36,-27,11,11,11,11,-38,11,11,11,11,-101,11,-94,-29,]),'IF':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,74,77,85,95,101,102,104,112,115,116,124,126,143,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[46,46,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,46,-89,-65,-48,-78,-76,-41,46,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,46,46,-86,-100,46,46,46,46,46,46,46,46,46,-85,-80,-77,-28,-81,46,-39,-40,-99,-84,-87,-36,-27,46,46,-38,46,46,46,-101,46,-94,-29,]),'SWITCH':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,74,77,85,95,101,102,104,112,115,116,124,126,143,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[48,48,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,48,-89,-65,-48,-78,-76,-41,48,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,48,48,-86,-100,48,48,48,48,48,48,48,48,48,-85,-80,-77,-28,-81,48,-39,-40,-99,-84,-87,-36,-27,48,48,-38,48,48,48,-101,48,-94,-29,]),'FOR':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,74,77,85,95,101,102,104,112,115,116,124,126,143,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[49,49,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,49,-89,-65,-48,-78,-76,-41,49,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,49,49,-86,-100,49,49,49,49,49,49,49,49,49,-85,-80,-77,-28,-81,49,-39,-40,-99,-84,-87,-36,-27,49,49,-38,49,49,49,-101,49,-94,-29,]),'VOID':([0,1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,74,77,85,95,101,102,104,112,115,116,124,126,143,162,163,164,165,171,172,174,178,182,183,188,189,190,191,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[50,50,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,50,-89,-65,-48,-78,-76,-41,50,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,50,50,-86,-100,50,50,50,50,50,50,50,50,50,-85,-80,-77,-28,-81,50,-39,-40,-99,-84,-87,-36,-27,50,50,-38,50,50,50,-101,50,-94,-29,]),'VARIABLE':([0,1,2,3,4,5,6,7,8,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,50,51,52,53,55,59,60,63,74,77,85,95,101,102,104,105,107,108,112,115,116,121,124,126,143,149,150,162,163,164,165,171,172,174,178,182,183,188,189,190,191,195,198,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,236,239,240,241,244,246,248,249,],[13,13,-1,-3,-4,-5,-6,-7,-8,-56,61,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-66,-67,-68,-69,71,-71,-72,-73,-74,-53,-54,-55,-57,-59,-60,-61,83,85,-51,-52,-2,-58,-62,100,13,-89,-65,-48,-78,-76,-41,-66,-70,-71,13,-88,-102,158,-37,-26,-79,180,181,-22,-23,-24,-25,-75,13,13,-86,-100,13,13,13,13,13,211,13,13,13,13,-85,-80,-77,-28,-81,13,-39,-40,-99,-84,-87,-36,-27,13,13,-38,13,13,13,-101,13,-94,-29,]),'DOLLAR':([0,1,2,3,4,5,6,7,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,43,44,45,47,52,53,54,55,56,59,60,62,64,65,66,67,68,74,75,77,81,85,95,96,97,98,101,102,103,104,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,143,144,148,162,163,164,165,167,168,169,171,172,174,176,178,182,183,185,186,188,189,190,191,198,200,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,233,235,236,238,239,240,241,244,246,248,249,],[51,51,-1,-3,-4,-5,-6,-7,-8,51,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,51,-53,-54,-55,-57,-59,-60,-61,51,-51,-52,51,-2,51,-58,-62,51,51,-90,-91,-92,-93,51,51,-89,51,-65,-48,51,51,51,-78,-76,51,-41,51,-88,-102,51,51,51,51,-37,-26,51,-43,-44,-47,51,-34,-35,-79,51,51,-22,-23,-24,-25,-42,-45,-46,-75,51,51,51,-86,-100,51,51,51,51,51,51,51,51,51,51,51,51,-85,-80,-77,-28,-81,51,-39,-40,-99,-84,-87,-36,-27,51,51,51,51,-38,51,51,51,51,-101,51,-94,-29,]),'TRUE':([0,1,2,3,4,5,6,7,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,43,44,45,47,52,53,54,55,56,59,60,62,64,65,66,67,68,74,75,77,81,85,95,96,97,98,101,102,103,104,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,143,144,148,162,163,164,165,167,168,169,171,172,174,176,178,182,183,186,188,189,190,191,198,200,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,233,235,236,238,239,240,241,244,246,248,249,],[52,52,-1,-3,-4,-5,-6,-7,-8,52,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,52,-53,-54,-55,-57,-59,-60,-61,52,-51,-52,52,-2,52,-58,-62,52,52,-90,-91,-92,-93,52,52,-89,52,-65,-48,52,52,52,-78,-76,52,-41,52,-88,-102,52,52,52,52,-37,-26,52,-43,-44,-47,52,-34,-35,-79,52,52,-22,-23,-24,-25,-42,-45,-46,-75,52,52,52,-86,-100,52,52,52,52,52,52,52,52,52,52,52,-85,-80,-77,-28,-81,52,-39,-40,-99,-84,-87,-36,-27,52,52,52,52,-38,52,52,52,52,-101,52,-94,-29,]),'FALSE':([0,1,2,3,4,5,6,7,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,43,44,45,47,52,53,54,55,56,59,60,62,64,65,66,67,68,74,75,77,81,85,95,96,97,98,101,102,103,104,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,143,144,148,162,163,164,165,167,168,169,171,172,174,176,178,182,183,186,188,189,190,191,198,200,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,233,235,236,238,239,240,241,244,246,248,249,],[53,53,-1,-3,-4,-5,-6,-7,-8,53,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,53,-53,-54,-55,-57,-59,-60,-61,53,-51,-52,53,-2,53,-58,-62,53,53,-90,-91,-92,-93,53,53,-89,53,-65,-48,53,53,53,-78,-76,53,-41,53,-88,-102,53,53,53,53,-37,-26,53,-43,-44,-47,53,-34,-35,-79,53,53,-22,-23,-24,-25,-42,-45,-46,-75,53,53,53,-86,-100,53,53,53,53,53,53,53,53,53,53,53,-85,-80,-77,-28,-81,53,-39,-40,-99,-84,-87,-36,-27,53,53,53,53,-38,53,53,53,53,-101,53,-94,-29,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,43,44,45,46,47,48,49,52,53,54,55,56,59,60,61,62,64,65,66,67,68,74,75,77,81,83,84,85,95,96,97,98,100,101,102,103,104,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,143,144,148,162,163,164,165,167,168,169,171,172,174,176,178,182,183,186,188,189,190,191,198,200,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,233,235,236,238,239,240,241,244,246,248,249,],[10,10,-1,-3,-4,-5,-6,-7,-8,56,10,-56,62,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,10,-53,-54,-55,-57,-59,-60,-61,75,10,81,82,-51,-52,10,-2,10,-58,-62,98,10,103,-90,-91,-92,-93,10,10,-89,10,122,123,-65,-48,10,10,10,144,-78,-76,10,-41,10,-88,-102,10,10,10,10,-37,-26,10,-43,-44,-47,10,-34,-35,-79,10,10,-22,-23,-24,-25,-42,-45,-46,-75,10,10,103,-86,-100,10,10,10,10,10,10,10,10,10,10,10,-85,-80,-77,-28,-81,10,-39,-40,-99,-84,-87,-36,-27,10,10,10,10,-38,10,10,10,10,-101,10,-94,-29,]),'LBRACKET':([0,1,2,3,4,5,6,7,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,43,44,45,47,52,53,54,55,56,59,60,62,64,65,66,67,68,74,75,77,81,85,95,96,97,98,101,102,103,104,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,143,144,148,162,163,164,165,167,168,169,171,172,174,176,178,182,183,186,188,189,190,191,197,198,200,203,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,230,231,233,235,236,238,239,240,241,244,246,248,249,],[54,54,-1,-3,-4,-5,-6,-7,-8,54,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,54,-53,-54,-55,-57,-59,-60,-61,54,-51,-52,54,-2,54,-58,-62,54,54,-90,-91,-92,-93,54,54,-89,54,-65,-48,54,54,54,-78,-76,54,-41,54,-88,-102,54,54,54,54,-37,-26,54,-43,-44,-47,54,-34,-35,-79,54,54,-22,-23,-24,-25,-42,-45,-46,-75,54,54,54,-86,-100,54,54,54,54,54,54,54,54,54,54,54,54,-85,-80,-77,-28,-81,54,-39,-40,-99,-84,-87,-36,-27,54,54,54,54,-38,54,54,54,54,-101,54,-94,-29,]),'LBRACE':([0,1,2,3,4,5,6,7,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,40,41,42,43,44,45,47,52,53,54,55,56,59,60,62,64,65,66,67,68,74,75,77,81,85,95,96,97,98,101,102,103,104,109,112,115,116,117,118,120,122,124,126,130,132,133,134,135,136,137,140,143,144,148,152,156,160,161,162,163,164,165,167,168,169,171,172,174,176,178,182,183,186,187,188,189,190,191,196,198,200,203,204,205,208,209,210,214,215,217,220,221,222,223,224,225,226,227,228,229,230,231,233,235,236,238,239,240,241,244,246,248,249,],[47,47,-1,-3,-4,-5,-6,-7,-8,47,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,47,-53,-54,-55,-57,74,-59,-60,-61,47,-51,-52,47,-2,47,-58,-62,47,47,-90,-91,-92,-93,47,47,-89,47,-65,-48,47,47,47,-78,-76,47,-41,148,47,-88,-102,47,47,47,47,-37,-26,47,-43,-44,-47,47,-34,-35,172,-79,47,47,183,184,188,189,-22,-23,-24,-25,-42,-45,-46,-75,47,47,47,-86,-100,47,47,203,47,47,47,47,148,47,47,47,47,47,-85,-80,-77,-28,-81,231,47,-39,-40,-99,-84,238,-87,-36,-27,239,47,47,47,47,-38,47,47,47,47,-101,47,-94,-29,]),'$end':([1,2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,77,85,95,101,102,104,115,116,124,126,143,162,163,164,165,171,178,182,208,209,210,214,215,221,222,223,224,226,227,228,236,244,248,249,],[0,-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,-89,-65,-48,-78,-76,-41,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,-86,-100,-85,-80,-77,-28,-81,-39,-40,-99,-84,-87,-36,-27,-38,-101,-94,-29,]),'RBRACE':([2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,47,52,53,55,58,59,60,76,77,78,79,80,85,95,101,102,104,112,115,116,124,126,138,143,148,153,154,162,163,164,165,171,178,182,190,198,199,204,205,208,209,210,214,215,220,221,222,223,224,226,227,228,236,238,241,244,246,248,249,250,251,],[-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,77,-51,-52,-2,-49,-58,-62,115,-89,116,-49,-104,-65,-48,-78,-76,-41,151,-88,-102,-37,-26,-50,-79,179,-106,-105,-22,-23,-24,-25,-75,-86,-100,206,214,215,221,222,-85,-80,-77,-28,-81,236,-39,-40,-99,-84,-87,-36,-27,-38,245,248,-101,249,-94,-29,-83,-82,]),'BREAK':([2,3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,55,59,60,77,85,95,101,102,104,115,116,124,126,143,162,163,164,165,171,178,182,208,209,210,214,215,221,222,223,224,226,227,228,236,240,244,248,249,],[-1,-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-2,-58,-62,-89,-65,-48,-78,-76,-41,-88,-102,-37,-26,-79,-22,-23,-24,-25,-75,-86,-100,-85,-80,-77,-28,-81,-39,-40,-99,-84,-87,-36,-27,-38,247,-101,-94,-29,]),'DOTCOMMA':([3,4,5,6,7,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,43,44,45,52,53,59,60,69,77,85,88,95,101,102,104,115,116,124,125,126,127,128,129,139,140,143,147,151,157,162,163,164,165,166,171,178,179,182,192,193,206,207,208,209,210,212,213,214,215,221,222,223,224,226,227,228,236,237,244,245,247,248,249,],[-3,-4,-5,-6,-7,-8,-56,-20,-21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-53,-54,-55,-57,-59,-60,-61,-51,-52,-58,-62,104,-89,-65,126,-48,-78,-76,-41,-88,-102,-37,162,-26,163,164,165,171,-58,-79,178,182,185,-22,-23,-24,-25,-30,-75,-86,-89,-100,208,209,223,224,-85,-80,-77,226,227,-28,-81,-39,-40,-99,-84,-87,-36,-27,-38,244,-101,-103,250,-94,-29,]),'PLUS':([5,11,14,38,39,40,41,42,43,44,45,52,53,58,59,60,69,77,79,85,89,90,92,94,95,101,102,114,115,116,119,124,139,140,145,153,155,166,194,202,210,216,218,242,243,],[-62,-56,65,-53,-54,-55,-57,-58,-59,-60,-61,-51,-52,65,-58,-62,65,-89,65,-65,-56,-62,65,-57,-48,65,-76,65,-88,-102,65,-37,65,-58,65,65,65,65,-76,218,-77,65,232,65,65,]),'MINUS':([5,11,14,38,39,40,41,42,43,44,45,52,53,58,59,60,69,77,79,85,89,90,92,94,95,101,102,114,115,116,119,124,139,140,145,153,155,166,194,202,210,216,219,242,243,],[-62,-56,66,-53,-54,-55,-57,-58,-59,-60,-61,-51,-52,66,-58,-62,66,-89,66,-65,-56,-62,66,-57,-48,66,-76,66,-88,-102,66,-37,66,-58,66,66,66,66,-76,219,-77,66,234,66,66,]),'TIMES':([5,11,14,38,39,40,41,42,43,44,45,52,53,58,59,60,69,77,79,85,89,90,92,94,95,101,102,114,115,116,119,124,139,140,145,153,155,166,194,210,216,242,243,],[-62,-56,67,-53,-54,-55,-57,-58,-59,-60,-61,-51,-52,67,-58,-62,67,-89,67,-65,-56,-62,67,-57,-48,67,-76,67,-88,-102,67,-37,67,-58,67,67,67,67,-76,-77,67,67,67,]),'DIVIDE':([5,11,14,38,39,40,41,42,43,44,45,52,53,58,59,60,69,77,79,85,89,90,92,94,95,101,102,114,115,116,119,124,139,140,145,153,155,166,194,210,216,242,243,],[-62,-56,68,-53,-54,-55,-57,-58,-59,-60,-61,-51,-52,68,-58,-62,68,-89,68,-65,-56,-62,68,-57,-48,68,-76,68,-88,-102,68,-37,68,-58,68,68,68,68,-76,-77,68,68,68,]),'COMMA':([11,30,31,32,35,36,37,38,39,40,41,43,44,45,52,53,58,59,60,77,79,80,85,89,90,92,94,95,101,102,105,106,107,108,115,116,124,145,153,194,210,],[-56,-67,-68,-69,-72,-73,-74,-53,-54,-55,-57,-59,-60,-61,-51,-52,96,-58,-62,-89,96,118,-65,-56,-62,96,-57,-48,-78,-76,-66,146,-70,-71,-88,-102,-37,96,-106,-76,-77,]),'RPAREN':([11,38,39,40,41,43,44,45,52,53,56,57,58,59,60,77,85,87,89,90,91,92,93,94,95,98,99,101,102,113,115,116,119,122,123,124,138,141,145,159,166,170,175,194,201,210,232,234,242,243,],[-56,-53,-54,-55,-57,-59,-60,-61,-51,-52,88,95,-49,-58,-62,-89,-65,125,127,128,129,-49,-31,-33,-48,142,143,-78,-76,152,-88,-102,156,160,161,-37,-50,173,-49,187,-30,-32,193,210,217,-77,-95,-97,-96,-98,]),'TWODOTS':([11,38,39,40,41,43,44,45,52,53,59,60,77,79,85,95,101,102,115,116,124,155,210,216,],[-56,-53,-54,-55,-57,-59,-60,-61,-51,-52,-58,-62,-89,117,-65,-48,-78,-76,-88,-102,-37,117,-77,230,]),'RBRACKET':([11,38,39,40,41,43,44,45,52,53,58,59,60,77,85,86,95,101,102,115,116,124,138,210,],[-56,-53,-54,-55,-57,-59,-60,-61,-51,-52,-49,-58,-62,-89,-65,124,-48,-78,-76,-88,-102,-37,-50,-77,]),'EQUALS':([11,38,39,40,41,43,44,45,52,53,59,60,61,71,77,85,89,90,92,94,95,101,102,114,115,116,124,131,132,133,158,180,181,210,211,218,219,],[-56,-53,-54,-55,-57,-59,-60,-61,-51,-52,-58,-62,97,109,-89,-65,-56,-62,131,-57,-48,-78,-76,131,-88,-102,-37,167,168,169,186,196,197,-77,225,233,235,]),'LANGLE':([11,29,33,34,38,39,40,41,43,44,45,52,53,59,60,77,85,89,90,92,94,95,101,102,114,115,116,124,210,],[-56,70,72,73,-53,-54,-55,-57,-59,-60,-61,-51,-52,-58,-62,-89,-65,-56,-62,132,-57,-48,-78,-76,132,-88,-102,-37,-77,]),'RANGLE':([11,30,31,32,35,36,37,38,39,40,41,43,44,45,52,53,59,60,77,85,89,90,92,94,95,101,102,105,107,108,110,111,114,115,116,124,177,210,],[-56,-67,-68,-69,-72,-73,-74,-53,-54,-55,-57,-59,-60,-61,-51,-52,-58,-62,-89,-65,-56,-62,133,-57,-48,-78,-76,-66,-70,-71,149,150,133,-88,-102,-37,195,-77,]),'NEQ':([11,38,39,40,41,43,44,45,52,53,59,60,77,85,89,90,92,94,95,101,102,114,115,116,124,210,],[-56,-53,-54,-55,-57,-59,-60,-61,-51,-52,-58,-62,-89,-65,-56,-62,134,-57,-48,-78,-76,134,-88,-102,-37,-77,]),'AND':([11,38,39,40,41,43,44,45,52,53,59,60,77,85,93,95,101,102,115,116,124,166,210,],[-56,-53,-54,-55,-57,-59,-60,-61,-51,-52,-58,-62,-89,-65,136,-48,-78,-76,-88,-102,-37,-30,-77,]),'OR':([11,38,39,40,41,43,44,45,52,53,59,60,77,85,93,95,101,102,115,116,124,166,210,],[-56,-53,-54,-55,-57,-59,-60,-61,-51,-52,-58,-62,-89,-65,137,-48,-78,-76,-88,-102,-37,-30,-77,]),'DOT':([13,],[63,]),'MAIN':([50,],[84,]),'ARROWFUNCTION':([142,173,],[174,191,]),'CASE':([184,250,],[200,200,]),'ELSE':([214,],[229,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,74,172,183,188,189,203,230,231,239,],[1,112,190,198,204,205,220,240,241,246,]),'cuerpo':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[2,55,2,55,2,192,2,2,2,55,207,55,2,55,55,55,2,2,2,55,55,55,]),'impresion':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'declaracion':([0,1,74,82,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[4,4,4,120,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'operacion':([0,1,10,28,47,54,56,62,64,74,75,81,96,97,98,103,112,117,118,120,122,130,135,144,148,172,174,176,183,186,188,189,190,191,198,200,203,204,205,220,230,231,233,235,238,239,240,241,246,],[5,5,60,60,60,60,90,60,60,5,60,60,60,60,60,60,5,60,60,60,60,60,60,60,60,5,5,60,5,60,5,5,5,5,5,60,5,5,5,5,5,5,60,60,60,5,5,5,5,]),'comentario':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'estructuras_de_Control':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'return':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'tipo':([0,1,70,72,73,74,82,112,146,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[12,12,106,110,111,12,121,12,177,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'valor':([0,1,10,28,47,54,56,62,64,74,75,81,96,97,98,103,112,117,118,120,122,130,135,144,148,172,174,176,183,186,188,189,190,191,198,200,203,204,205,220,230,231,233,235,238,239,240,241,246,],[14,14,58,69,79,58,92,58,101,14,114,119,58,139,58,145,14,153,155,114,58,166,114,58,58,14,14,101,14,139,14,14,14,14,14,216,14,14,14,14,14,14,242,243,155,14,14,14,14,]),'sentencia_If':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'sentencia_Switch':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ciclo_for':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'funcion_Anonima':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'diccionario':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'Conjunto':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'funcion_flecha':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'funcion_Void':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'funcion':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'funcion_Data':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'estructura_List':([0,1,74,112,172,174,183,188,189,190,191,198,203,204,205,220,230,231,239,240,241,246,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'variable':([0,1,10,28,47,54,56,62,64,74,75,81,96,97,98,103,112,117,118,120,122,130,135,144,148,172,174,176,183,185,186,188,189,190,191,198,200,203,204,205,220,230,231,233,235,238,239,240,241,246,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,202,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'Bool':([0,1,10,28,47,54,56,62,64,74,75,81,96,97,98,103,112,117,118,120,122,130,135,144,148,172,174,176,183,186,188,189,190,191,198,200,203,204,205,220,230,231,233,235,238,239,240,241,246,],[41,41,41,41,41,41,94,41,41,41,94,41,41,41,41,41,41,41,41,41,41,41,94,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'tupla':([0,1,10,28,47,54,56,62,64,74,75,81,96,97,98,103,112,117,118,120,122,130,135,144,148,172,174,176,183,186,188,189,190,191,198,200,203,204,205,220,230,231,233,235,238,239,240,241,246,],[42,42,59,59,59,59,59,59,59,42,59,59,59,140,59,59,42,59,59,59,59,59,59,59,59,42,42,59,42,59,42,42,42,42,42,59,42,42,42,42,42,42,59,59,59,42,42,42,42,]),'lista':([0,1,10,28,47,54,56,62,64,74,75,81,96,97,98,103,112,117,118,120,122,130,135,144,148,172,174,176,183,186,188,189,190,191,197,198,200,203,204,205,220,230,231,233,235,238,239,240,241,246,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,213,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'cuerpo_conjunto':([0,1,10,28,47,54,56,62,64,74,75,81,96,97,98,103,109,112,117,118,120,122,130,135,144,148,172,174,176,183,186,188,189,190,191,196,198,200,203,204,205,220,230,231,233,235,238,239,240,241,246,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,147,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,212,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'cuerpo_Diccionario':([0,1,10,28,47,54,56,62,64,74,75,81,96,97,98,103,112,117,118,120,122,130,135,144,148,172,174,176,183,186,188,189,190,191,198,200,203,204,205,220,225,230,231,233,235,238,239,240,241,246,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,237,45,45,45,45,45,45,45,45,45,]),'valores':([10,47,54,56,62,96,98,103,122,144,148,],[57,76,86,87,99,138,141,57,159,175,76,]),'operador':([14,58,69,79,92,101,114,119,139,145,153,155,166,216,242,243,],[64,64,64,64,64,64,64,64,64,176,64,64,64,64,64,64,]),'duplas':([47,118,238,],[78,154,78,]),'dupla':([47,118,238,],[80,80,80,]),'condiciones':([56,75,135,],[91,113,170,]),'condicion':([56,75,120,135,],[93,93,157,93,]),'expresion':([64,176,],[102,194,]),'Comparador':([92,114,],[130,130,]),'conector':([93,],[135,]),'caso':([184,250,],[199,251,]),'contador':([185,],[201,]),'else':([214,],[228,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> cuerpo','programa',1,'p_programa','main.py',57),
  ('programa -> programa cuerpo','programa',2,'p_programa','main.py',58),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','main.py',66),
  ('cuerpo -> declaracion','cuerpo',1,'p_cuerpo','main.py',67),
  ('cuerpo -> operacion','cuerpo',1,'p_cuerpo','main.py',68),
  ('cuerpo -> comentario','cuerpo',1,'p_cuerpo','main.py',69),
  ('cuerpo -> estructuras_de_Control','cuerpo',1,'p_cuerpo','main.py',70),
  ('cuerpo -> return','cuerpo',1,'p_cuerpo','main.py',71),
  ('estructuras_de_Control -> sentencia_If','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',75),
  ('estructuras_de_Control -> sentencia_Switch','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',76),
  ('estructuras_de_Control -> ciclo_for','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',77),
  ('estructuras_de_Control -> funcion_Anonima','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',78),
  ('estructuras_de_Control -> diccionario','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',79),
  ('estructuras_de_Control -> Conjunto','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',80),
  ('estructuras_de_Control -> funcion_flecha','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',81),
  ('estructuras_de_Control -> funcion_Void','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',82),
  ('estructuras_de_Control -> funcion','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',83),
  ('estructuras_de_Control -> funcion_Data','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',84),
  ('estructuras_de_Control -> estructura_List','estructuras_de_Control',1,'p_estructuras_de_Control','main.py',85),
  ('comentario -> COMMENTLINE','comentario',1,'p_comentario','main.py',88),
  ('comentario -> COMMENTBLOCK','comentario',1,'p_comentario','main.py',89),
  ('impresion -> PRINT LPAREN valores RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',94),
  ('impresion -> PRINT LPAREN CHAINCHAR RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',95),
  ('impresion -> PRINT LPAREN operacion RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',96),
  ('impresion -> PRINT LPAREN condiciones RPAREN DOTCOMMA','impresion',5,'p_impresion','main.py',97),
  ('impresion -> PRINT LPAREN RPAREN DOTCOMMA','impresion',4,'p_impresion','main.py',98),
  ('sentencia_If -> IF LPAREN condiciones RPAREN LBRACE programa RBRACE else','sentencia_If',8,'p_sentencia_If','main.py',116),
  ('sentencia_If -> IF LPAREN condiciones RPAREN LBRACE programa RBRACE','sentencia_If',7,'p_sentencia_If','main.py',117),
  ('else -> ELSE LBRACE programa RBRACE','else',4,'p_else','main.py',122),
  ('condicion -> valor Comparador valor','condicion',3,'p_condicion','main.py',126),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','main.py',186),
  ('condiciones -> condicion conector condiciones','condiciones',3,'p_condiciones','main.py',187),
  ('condiciones -> Bool','condiciones',1,'p_condiciones','main.py',188),
  ('conector -> AND','conector',1,'p_conector','main.py',200),
  ('conector -> OR','conector',1,'p_conector','main.py',201),
  ('estructura_List -> LIST LANGLE tipo RANGLE VARIABLE EQUALS lista DOTCOMMA','estructura_List',8,'p_estructura_List','main.py',208),
  ('lista -> LBRACKET valores RBRACKET','lista',3,'p_lista','main.py',224),
  ('funcion_Void -> VOID VARIABLE LPAREN valores RPAREN LBRACE programa RBRACE','funcion_Void',8,'p_funcion_Void','main.py',230),
  ('funcion_Void -> VOID VARIABLE LPAREN RPAREN LBRACE programa RBRACE','funcion_Void',7,'p_funcion_Void','main.py',231),
  ('funcion_Void -> VOID MAIN LPAREN RPAREN LBRACE programa RBRACE','funcion_Void',7,'p_funcion_Void','main.py',232),
  ('return -> RETURN valor DOTCOMMA','return',3,'p_return','main.py',245),
  ('Comparador -> EQUALS EQUALS','Comparador',2,'p_Comparador','main.py',250),
  ('Comparador -> LANGLE','Comparador',1,'p_Comparador','main.py',251),
  ('Comparador -> RANGLE','Comparador',1,'p_Comparador','main.py',252),
  ('Comparador -> LANGLE EQUALS','Comparador',2,'p_Comparador','main.py',253),
  ('Comparador -> RANGLE EQUALS','Comparador',2,'p_Comparador','main.py',254),
  ('Comparador -> NEQ','Comparador',1,'p_Comparador','main.py',255),
  ('tupla -> LPAREN valores RPAREN','tupla',3,'p_tupla','main.py',263),
  ('valores -> valor','valores',1,'p_valores','main.py',267),
  ('valores -> valor COMMA valores','valores',3,'p_valores','main.py',268),
  ('Bool -> TRUE','Bool',1,'p_Bool','main.py',278),
  ('Bool -> FALSE','Bool',1,'p_Bool','main.py',279),
  ('valor -> variable','valor',1,'p_valor','main.py',285),
  ('valor -> NUMBER','valor',1,'p_valor','main.py',286),
  ('valor -> FLOAT','valor',1,'p_valor','main.py',287),
  ('valor -> CHAINCHAR','valor',1,'p_valor','main.py',288),
  ('valor -> Bool','valor',1,'p_valor','main.py',289),
  ('valor -> tupla','valor',1,'p_valor','main.py',290),
  ('valor -> lista','valor',1,'p_valor','main.py',291),
  ('valor -> cuerpo_conjunto','valor',1,'p_valor','main.py',292),
  ('valor -> cuerpo_Diccionario','valor',1,'p_valor','main.py',293),
  ('valor -> operacion','valor',1,'p_valor','main.py',294),
  ('variables -> variable','variables',1,'p_variables','main.py',299),
  ('variables -> variable COMMA variables','variables',3,'p_variables','main.py',300),
  ('variable -> DOLLAR VARIABLE','variable',2,'p_variable','main.py',307),
  ('tipo -> MAP','tipo',1,'p_tipo','main.py',312),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','main.py',313),
  ('tipo -> STRING','tipo',1,'p_tipo','main.py',314),
  ('tipo -> INT','tipo',1,'p_tipo','main.py',315),
  ('tipo -> SET','tipo',1,'p_tipo','main.py',316),
  ('tipo -> LIST','tipo',1,'p_tipo','main.py',317),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','main.py',318),
  ('tipo -> TUPLE','tipo',1,'p_tipo','main.py',319),
  ('tipo -> VAR','tipo',1,'p_tipo','main.py',320),
  ('declaracion -> tipo VARIABLE EQUALS valor DOTCOMMA','declaracion',5,'p_declaracion','main.py',328),
  ('operacion -> valor operador expresion','operacion',3,'p_operacion','main.py',357),
  ('expresion -> LPAREN valor operador expresion RPAREN','expresion',5,'p_expresion','main.py',364),
  ('expresion -> valor','expresion',1,'p_expresion','main.py',365),
  ('funcion -> VARIABLE LPAREN valores RPAREN','funcion',4,'p_funcion','main.py',387),
  ('funcion_Data -> VARIABLE DOT VARIABLE LPAREN valores RPAREN DOTCOMMA','funcion_Data',7,'p_funcion_Data','main.py',390),
  ('sentencia_Switch -> SWITCH LPAREN valor RPAREN LBRACE caso RBRACE','sentencia_Switch',7,'p_sentencia_Switch','main.py',394),
  ('caso -> CASE valor TWODOTS programa BREAK DOTCOMMA caso','caso',7,'p_caso','main.py',397),
  ('caso -> CASE valor TWODOTS programa BREAK DOTCOMMA','caso',6,'p_caso','main.py',398),
  ('funcion_flecha -> tipo VARIABLE LPAREN valores RPAREN ARROWFUNCTION cuerpo DOTCOMMA','funcion_flecha',8,'p_funcion_flecha_param','main.py',404),
  ('funcion_flecha -> tipo VARIABLE LPAREN RPAREN ARROWFUNCTION cuerpo DOTCOMMA','funcion_flecha',7,'p_funcion_flecha_no_param','main.py',413),
  ('Conjunto -> SET VARIABLE EQUALS cuerpo_conjunto DOTCOMMA','Conjunto',5,'p_Conjunto','main.py',419),
  ('Conjunto -> SET LANGLE tipo RANGLE VARIABLE EQUALS cuerpo_conjunto DOTCOMMA','Conjunto',8,'p_Conjunto','main.py',420),
  ('cuerpo_conjunto -> LBRACE valores RBRACE','cuerpo_conjunto',3,'p_cuerpo_conjunto','main.py',442),
  ('cuerpo_conjunto -> LBRACE RBRACE','cuerpo_conjunto',2,'p_cuerpo_conjunto','main.py',443),
  ('operador -> PLUS','operador',1,'p_operador','main.py',457),
  ('operador -> MINUS','operador',1,'p_operador','main.py',458),
  ('operador -> TIMES','operador',1,'p_operador','main.py',459),
  ('operador -> DIVIDE','operador',1,'p_operador','main.py',460),
  ('ciclo_for -> FOR LPAREN declaracion condicion DOTCOMMA contador RPAREN LBRACE programa RBRACE','ciclo_for',10,'p_ciclo_for','main.py',467),
  ('contador -> variable PLUS PLUS','contador',3,'p_contador','main.py',572),
  ('contador -> variable PLUS EQUALS valor','contador',4,'p_contador','main.py',573),
  ('contador -> variable MINUS MINUS','contador',3,'p_contador','main.py',574),
  ('contador -> variable MINUS EQUALS valor','contador',4,'p_contador','main.py',575),
  ('funcion_Anonima -> tipo VARIABLE EQUALS tupla LBRACE programa RBRACE DOTCOMMA','funcion_Anonima',8,'p_funcion_Anonima','main.py',585),
  ('funcion_Anonima -> tupla LBRACE programa RBRACE DOTCOMMA','funcion_Anonima',5,'p_funcion_Anonima','main.py',586),
  ('diccionario -> MAP LANGLE tipo COMMA tipo RANGLE VARIABLE EQUALS cuerpo_Diccionario DOTCOMMA','diccionario',10,'p_diccionario','main.py',593),
  ('cuerpo_Diccionario -> LBRACE duplas RBRACE','cuerpo_Diccionario',3,'p_cuerpo_Diccionario','main.py',624),
  ('cuerpo_Diccionario -> LBRACE RBRACE','cuerpo_Diccionario',2,'p_cuerpo_Diccionario','main.py',625),
  ('duplas -> dupla','duplas',1,'p_duplas','main.py',634),
  ('duplas -> dupla COMMA duplas','duplas',3,'p_duplas','main.py',635),
  ('dupla -> valor TWODOTS valor','dupla',3,'p_dupla','main.py',646),
]
